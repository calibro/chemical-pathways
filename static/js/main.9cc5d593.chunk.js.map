{"version":3,"sources":["lib/sanity.js","utils.js","components/Loader.js","components/Landing.js","components/Header.js","components/Search.js","components/Chemicals.js","components/Topics.js","components/Researchers.js","components/Location.js","components/Locations.js","components/Methodologies.js","components/Times.js","components/Home.js","components/List.js","components/ProjectPageSideBar.js","components/Video.js","components/ReactStreetView.js","components/SpecialProject.js","components/Carousel.js","components/ProjectPage.js","serviceWorker.js","index.js","timeUtils.js","appContext.js"],"names":["__webpack_require__","d","__webpack_exports__","builder","_sanity_client__WEBPACK_IMPORTED_MODULE_0__","_sanity_client__WEBPACK_IMPORTED_MODULE_0___default","n","_sanity_image_url__WEBPACK_IMPORTED_MODULE_1__","imageUrlBuilder","sanityClient","projectId","dataset","useCdn","parseQueryParams","selection","map","v","i","concat","value","join","reactstrap__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","Loader","_ref","_ref$fullheader","fullheader","a","createElement","className","style","position","top","bottom","left","right","zIndex","type","color","withRouter","history","react_default","src","width","marginRight","marginLeft","onClick","push","height","withGetScreen","_ref$expanded","expanded","isMobile","context","useContext","AppContext","_useState","useState","_useState2","Object","slicedToArray","isOpen","toggleOpen","useEffect","pathname","location","split","setSection","changeSection","section","selected","Navbar","light","expand","Fragment","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","NavItem","Search","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","matchStateToTerm","elem","length","objectKey","console","log","toLowerCase","indexOf","name","state","_this2","_this$props","items","selectionCallBack","Autocomplete_default","getItemValue","item","inputProps","placeholder","wrapperStyle","menuStyle","backgroundColor","maxHeight","overflow","open","renderItem","isHighlighted","key","_id","padding","borderBottom","cursor","opacity","some","e","shouldItemRender","onChange","event","setState","onSelect","val","isItemSelectable","Component","contextType","svgWidth","window","innerWidth","svgHeight","innerHeight","radiusScale","scaleLinear","range","Chemicals","setUpForceLayout","res","_extent","extent","relatedProjects","_extent2","max","domain","simulationNodes","filter","r","sort","b","radius","source","target","slice","forceSimulation","force","forceManyBody","strength","forceCenter","forceCollide","iterations","on","forEach","x","y","nodes","selectChemical","toggleSelected","queryParams","chemicals","activeState","fetch","then","catch","err","error","_this3","_this$state","activeIndex","s","react_tooltip_dist_default","place","theme","effect","components_Search","react_responsive_default","minWidth","node","index","data-tip","toUpperCase","ref","cx","cy","stroke","strokeWidth","onMouseEnter","ReactTooltip","show","findDOMNode","refs","onMouseLeave","hide","dx","dy","textAnchor","wrappedClass","WrappedComponent","topics","setTopics","_useState3","_useState4","loading","setLoading","_useState5","_useState6","setActiveIndex","handleStatusChange","selectTopic","wordScale","topic","fontSize","Researchers","researchersNodes","researchersLinks","researchersLinksGrouped","values","groupBy","formattedLinks","findIndex","weight","links","forceLink","forceRadial","selectResearcher","researchers","researchersCount","flatten","reduce","prev","cur","entries","projects","researcher1","remainingResearchers","splice","j","sortedResearchers","link","x1","y1","x2","y2","Location","coordinates","zoom","country","city","callbackClick","backgroundImage","lng","lat","offsets","ScrollToHOC","scrollTo","locations","setLocations","getYOffset","selectLocation","id","rowHeight","Math","floor","react_scroll_to","components_Location","methodologies","setMethodologies","selectMethod","heightScale","methodology","times","setTimes","setDerivedTimes","derivedTimes","time","diff","d1","d2","months","getFullYear","getMonth","monthDiff","Date","startDate","endDate","quantizeTime","sortedTimes","groupedByTimes","el","reverse","widthScale","scaleOrdinal","sum","duration","borderTop","selectTime","timeLabels","Projects","React","lazy","bind","Home","setSelectedLocation","selectedLocation","setSelectedTopic","selectedTopic","setSelectedChemical","chemical","selectedChemical","setSelected","selectedArray","find","parsed","queryString","parse","search","Array","isArray","p","appContext","Provider","Suspense","fallback","components_Header","components_Chemicals","components_Topics","components_Locations","components_Researchers","components_Times","components_Methodologies","elements","ProjectPageSideBar","project","List","places","methods","url","videoId","paddingLeft","title","frameBorder","allowFullScreen","ReactStreetview","streetView","canvas","googleMaps","StreetViewPanorama","streetViewPanoramaOptions","addListener","onPositionChanged","getPosition","onPovChanged","getPov","initialize","ReactDOM","clearInstanceListeners","defaultProps","pov","heading","pitch","asyncLoading","globalPath","apiKey","jsonp","SpecialProject","objectDestructuringEmpty","setProjects","setBounds","_useState7","_useState8","selectedIndex","setSelectedIndex","Map","ReactMapboxGl","accessToken","images","line","lineString","bounds","bbox","getCirclePaint","circle-radius","circle-color","circle-stroke-color","circle-stroke-width","circle-opacity","mapZoom","activeProject","streetviewOptions","streetviewCoordinates","streetviewHead","streetviewPitch","motionTracking","motionTrackingControl","linksControl","panControl","zoomControl","addressControl","fullscreenControl","enableCloseButton","disableDefaultUI","showRoadLabels","clickToGo","scrollwheel","ReactStreetView","stringCoordinates","image","m","containerStyle","onZoomEnd","z","getZoom","center","lib_esm","paint","isTablet","activeSlide","setActiveSlide","settings","dots","infinite","centerMode","slidesToShow","slidesToScroll","adaptiveHeight","variableWidth","arrows","afterChange","current","slider","lib_default","assign","c","alt","slickPrev","slickNext","serializers","types","code","data-language","language","setProject","modal","toggleModal","slug","query","goBack","researcher","mainImage","body","BlockContent_default","blocks","internalResources","externalResources","internalResourcesFiles","private","internalResourcesCategories","renderContainerOnSingleChild","href","download","linkUrl","externalResourcesCategories","components_ProjectPageSideBar","components_Carousel","videoUrl","components_Video","Modal","toggle","ModalHeader","ModalBody","ModalFooter","Button","components_SpecialProject","Boolean","hostname","match","App","HashRouter","Switch","Route","exact","path","component","Landing","ProjectPage","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","0","3","6","12","24","36","react__WEBPACK_IMPORTED_MODULE_0__","createContext"],"mappings":"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","file":"static/js/main.9cc5d593.chunk.js","sourcesContent":["import sanityClient from '@sanity/client';\nimport imageUrlBuilder from '@sanity/image-url';\n\nexport const builder = imageUrlBuilder(sanityClient);\n\nexport default sanityClient({\n  projectId: 'i89zv88h',\n  dataset: 'projects',\n  useCdn: true\n  // useCdn == true gives fast, cheap responses using a globally distributed cache.\n  // Set this to false if your application require the freshest possible\n  // data always (potentially slightly slower and a bit more expensive).\n});\n","export const parseQueryParams = selection => {\n  return selection\n    .map((v, i) => {\n      return i === 0 ? `?selected=${v.value}` : `&selected=${v.value}`;\n    })\n    .join('');\n};\n","import { Spinner } from 'reactstrap';\nimport React from 'react';\n\nconst Loader = ({ fullheader = true }) => {\n  return (\n    <div className='d-flex justify-content-center align-items-center bg-white' style={{ position: 'absolute', top: fullheader ? '80px' : '40px', bottom: 0, left: 0, right: 0, zIndex: 999}}>\n      <Spinner type=\"grow\" color=\"dark\" />\n    </div>\n  );\n};\n\nexport default Loader;\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nconst Landing = ({ history }) => {\n  const goToHome = () => {\n    history.push(`/chemical`);\n  };\n\n  return (\n    <div className=\"landing-container\">\n      <div className=\"landing-upper-container\">\n        <div className=\"landing-upper-content\">\n          <div className=\"landing-logo-container\">\n            <img src=\"images/logo-white.svg\" width=\"350px\" />\n          </div>\n          <div className=\"landing-text-container\">\n            <div className=\"w-100 landing-text-container-upper\">\n              The everyday lives of contemporary youth are awash with chemicals\n              to boost pleasure, moods, sexual performance, appearance and\n              health. What do pills, drinks, sprays, powders and lotions do for\n              youth? What effects are they seeking? How can we understand the\n              ways chemicals affect young bodies and minds? <br />\n              <br />\n              Instead of focusing on illegal drug use with the purpose of\n              controlling it, we study the pervasive use of chemicals in\n              everyday life – ethnographically, from the perspective of youth\n              themselves.\n            </div>\n            <div\n              className=\"landing-text-container-lower\"\n              style={{ marginRight: \"2%\" }}\n            >\n              We draw on medical anthropology and studies of science, technology\n              and contemporary youth culture to research the lived effects of\n              chemicals. By ‘lived effects’, we mean the combination of\n              chemicals’ pharmaceutical properties, beliefs and expectations\n              surrounding their use, and users’ experimentation with various\n              techniques. Our ethnographic fieldwork, based on participant\n              observation and long-term immersion in the field, takes place in\n              the Netherlands, France, Indonesia and the Philippines.\n            </div>\n            <div\n              className=\"landing-text-container-lower\"\n              style={{ marginLeft: \"2%\" }}\n            >\n              This website is dynamic, experimental and rich, like the methods\n              used and insights produced during our innovative, tentacular\n              project.\n              <br />\n              <br />\n              The first phase of ChemicalYouth has ended, but our work continues\n              and this website will keep growing. We have many publications in\n              the oven, and numerous small and big projects are still in the\n              works. It is likely that you will find something new every time\n              you visit us.\n            </div>\n          </div>\n          <div className=\"landing-link link\" onClick={() => goToHome()}>\n            EXPLORE THE PROJECT\n            <span>\n              <img src=\"images/arrow-right.svg\" width=\"20px\" />\n            </span>\n          </div>\n        </div>\n      </div>\n      <div className=\"landing-lower\">\n        <div className=\"landing-lower-container\">\n          <div className=\"landing-lower-text\">\n            The ChemicalYouth project is based at the University of Amsterdam\n            and received 5 years of funding from the European Research Council\n            (2013-2018).\n          </div>\n          <div>\n            <img src=\"images/aissr_logoblokjesite_GRAY.png\" height=\"80px\" />\n          </div>\n          <div>\n            <img src=\"images/uvalogo_tag_p.png\" height=\"80px\" />\n          </div>\n          <div>\n            <img src=\"images/LOGO_ERC.png\" height=\"80px\" />\n          </div>\n          <div className=\"landing-lower-text\">\n            This website is designed and developed by Calibro. Project team:\n            Lorem ipsum, dolor sit amet, other sui, lorem dolor, ather examples.\n          </div>\n          <div>\n            <img src=\"images/LOGO_ERC.png\" height=\"80px\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(Landing);\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../appContext\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu\n} from \"reactstrap\";\nimport { withRouter } from \"react-router-dom\";\nimport { withGetScreen } from \"react-getscreen\";\n\nconst Header = ({ history, expanded = true, isMobile }) => {\n  const context = useContext(AppContext);\n  const [isOpen, toggleOpen] = useState(false);\n\n  useEffect(() => {\n    const pathname = history.location.pathname.split(\"/\");\n    context.setSection(pathname[1]);\n  }, [history.location.pathname]);\n\n  const changeSection = section => {\n    context.setSection(section);\n    context.selected = [];\n    history.push(`/${section}`);\n  };\n\n  const goToLanding = () => {\n    history.push(`/`);\n  };\n\n  return (\n    <div>\n      <Navbar\n        color=\"light\"\n        light\n        expand=\"md\"\n        className=\"header\"\n        style={{ height: isMobile() ? \"auto\" : expanded ? \"70px\" : \"12px\" }}\n      >\n        {expanded && (\n          <React.Fragment>\n            <NavbarBrand>\n              <div\n                className={`navbar-brand cursor-pointer`}\n                onClick={() => goToLanding()}\n              >\n                <img src=\"images/logo-white.svg\" width={60} />\n              </div>\n            </NavbarBrand>\n            <NavbarToggler onClick={() => toggleOpen(!isOpen)} />\n            <Collapse isOpen={isOpen} navbar>\n              <Nav className=\"\" navbar>\n                <NavItem className=\"nav-item\">\n                  <div className={`header-el-not-link`}>View by:</div>\n                </NavItem>\n                <NavItem\n                  className=\"nav-item\"\n                  onClick={() => changeSection(\"chemical\")}\n                >\n                  <div\n                    className={`header-el ${\n                      context.section === \"chemical\" ? \"underline\" : \"none\"\n                    }`}\n                  >\n                    CHEMICAL\n                  </div>\n                </NavItem>\n                <NavItem\n                  className=\"nav-item\"\n                  onClick={() => changeSection(\"topic\")}\n                >\n                  <div\n                    className={`header-el ${\n                      context.section === \"topic\" ? \"underline\" : \"none\"\n                    }`}\n                  >\n                    TOPIC\n                  </div>\n                </NavItem>\n                <NavItem\n                  className=\"nav-item\"\n                  onClick={() => changeSection(\"location\")}\n                >\n                  <div\n                    className={`header-el ${\n                      context.section === \"location\" ? \"underline\" : \"none\"\n                    }`}\n                  >\n                    LOCATION\n                  </div>\n                </NavItem>\n                <NavItem\n                  className=\"nav-item\"\n                  onClick={() => changeSection(\"researcher\")}\n                >\n                  <div\n                    className={`header-el ${\n                      context.section === \"researcher\" ? \"underline\" : \"none\"\n                    }`}\n                  >\n                    RESEARCHER\n                  </div>\n                </NavItem>\n                <NavItem\n                  className=\"nav-item\"\n                  onClick={() => changeSection(\"time\")}\n                >\n                  <div\n                    className={`header-el ${\n                      context.section === \"time\" ? \"underline\" : \"none\"\n                    }`}\n                  >\n                    TIME\n                  </div>\n                </NavItem>\n                <NavItem\n                  className=\"nav-item\"\n                  onClick={() => changeSection(\"method\")}\n                >\n                  <div\n                    className={`header-el ${\n                      context.section === \"method\" ? \"underline\" : \"none\"\n                    }`}\n                  >\n                    METHOD\n                  </div>\n                </NavItem>\n              </Nav>\n            </Collapse>\n          </React.Fragment>\n        )}\n      </Navbar>\n    </div>\n  );\n};\n\nexport default withGetScreen(withRouter(Header));\n","import React, { Component } from \"react\";\nimport Autocomplete from \"react-autocomplete\";\nimport { AppContext } from \"../appContext\";\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: \"\"\n    };\n  }\n\n  matchStateToTerm = (elem, value) => {\n    if (value.length > 0) {\n      if (this.props.objectKey) {\n        console.log(\n          elem[this.props.objectKey]\n            .toLowerCase()\n            .indexOf(value.toLowerCase()) !== -1\n        );\n        return (\n          elem[this.props.objectKey]\n            .toLowerCase()\n            .indexOf(value.toLowerCase()) !== -1\n        );\n      } else {\n        return elem.name.toLowerCase().indexOf(value.toLowerCase()) !== -1;\n      }\n    }\n  };\n\n  render() {\n    const { items, type, selectionCallBack, objectKey } = this.props;\n    const { value } = this.state;\n\n    return (\n      <div className=\"autocomplete-container\">\n        <img\n          src=\"images/magnify.svg\"\n          width={20}\n          className=\"autocomplete-icon\"\n        />\n        <Autocomplete\n          getItemValue={item => (objectKey ? item[objectKey] : item.name)}\n          items={items}\n          inputProps={{\n            className: \"autocomplete-input\",\n            placeholder: `Search ${type}`\n          }}\n          wrapperStyle={{\n            position: \"relative\"\n          }}\n          menuStyle={{\n            backgroundColor: \"white\",\n            position: \"absolute\",\n            zIndex: 999,\n            top: 33,\n            left: 0,\n            maxHeight: \"500px\",\n            overflow: \"auto\"\n          }}\n          open={true}\n          renderItem={(item, isHighlighted) => (\n            <div\n              key={item._id}\n              style={{\n                padding: \"10px\",\n                borderBottom: \"1px solid #d7d7d7\",\n                cursor: \"pointer\",\n                opacity: this.context.selected.some(e => e.value === item.name)\n                  ? 0.5\n                  : 1\n              }}\n              className={`hover-el`}\n            >\n              {objectKey ? item[objectKey] : item.name}\n            </div>\n          )}\n          value={value}\n          shouldItemRender={this.matchStateToTerm}\n          onChange={(event, value) => this.setState({ value: value })}\n          onSelect={val => {\n            selectionCallBack(type, val);\n            this.setState({ value: \"\" });\n          }}\n          isItemSelectable={item => {\n            console.log(this.context.selected.some(e => e.value === item.name));\n            return !this.context.selected.some(e => e.value === item.name);\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nSearch.contextType = AppContext;\n\nexport default Search;\n","import React, { Component } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport { withRouter } from 'react-router-dom';\nimport sanityClient from '../lib/sanity';\nimport circlePack from '../lib/circlePack';\nimport {\n  forceSimulation,\n  forceManyBody,\n  forceCenter,\n  forceCollide\n} from 'd3-force';\nimport { scaleLinear } from 'd3-scale';\nimport { extent } from 'd3-array';\nimport ReactTooltip from 'react-tooltip';\nimport { AppContext } from '../appContext';\nimport Search from './Search';\nimport { parseQueryParams } from '../utils';\nimport Responsive from 'react-responsive';\n\nconst query = `*[_type==\"chemical\"]{\n  name,\n  \"relatedProjects\": count(*[_type=='project' && references(^._id)])\n}`;\n\nconst svgWidth = window.innerWidth / 2 - 60;\nconst svgHeight = window.innerHeight - 140;\n\nconst radiusScale = scaleLinear().range([0, 50]);\n// const Chemicals = ({ type }) => {\n//   const [chemicals, setChemicals] = useState([]);\n//   const [nodes, setNodes] = useState([]);\n//   const [simulation, setSimulation] = useState(null);\n\n//   // Similar to componentDidMount and componentDidUpdate:\n//   useEffect(() => {\n//     sanityClient\n//       .fetch(query)\n//       .then(res => {\n//         //setUpForceLayout(res);\n//         setChemicals(res);\n//         return () => {\n//           // Clean up\n//         };\n//       })\n//       .catch(err => {\n//         console.error(err);\n//       });\n//   }, [type]);\n\n// useEffect(() => {\n//   const simulationNodes = nodes\n//     .filter(r => r.relatedProjects > 0)\n//     .sort((a, b) => {\n//       return b.relatedProjects - a.relatedProjects;\n//     })\n//     .map(r => {\n//       r.radius = radiusScale(r.relatedProjects);\n//       return r;\n//     });\n\n//   console.log(simulationNodes);\n\n//   const links = simulationNodes\n//     .map((n, i) => {\n//       if (i < simulationNodes.length - 1) {\n//         return {\n//           source: i,\n//           target: i + 1\n//         };\n//       }\n//     })\n//     .slice(0, simulationNodes.length - 1);\n//   console.log(links);\n//   const simulation = forceSimulation(simulationNodes)\n//     .force('charge', forceManyBody().strength(50))\n//     //.force('link', forceLink(links))\n//     .force('center', forceCenter(svgWidth / 2, svgHeight / 2))\n//     .force(\n//       'collision',\n//       forceCollide()\n//         .radius(30)\n//         .strength(2)\n//         .iterations(2)\n//     )\n//     .on('tick', a => {\n//       console.log('here');\n//       setNodes(simulationNodes);\n//       //setNodes(nodes);\n//     });\n//   setSimulation(simulation);\n// });\n\n//   return (\n//     <div className='w-100 h-100 d-flex flex-column'>\n//       <div className='w-100 d-flex p-3' />\n//       <div className='w-100 h-100 d-flex flex-column'>\n//         <svg width={svgWidth} height={svgHeight}>\n//           <defs>\n//             <filter x='0' y='0' width='1' height='1' id='solid'>\n//               <feFlood floodColor='white' />\n//               <feComposite in='SourceGraphic' />\n//             </filter>\n//           </defs>\n//           {nodes.map((node, index) => {\n//             if (node.relatedProjects > 0) {\n//               return (\n//                 <g key={index}>\n//                   <circle\n//                     cx={node.x}\n//                     cy={node.y}\n//                     fill='white'\n//                     stroke='black'\n//                     strokeWidth={2}\n//                     r={30}\n//                   />\n//                   {/* <text\n//                     dx={node.x}\n//                     dy={node.y}\n//                     style={{\n//                       fontSize: '10px',\n//                       textTransform: 'uppercase',\n//                       dominantBaseline: 'central'\n//                     }}\n//                     fill={'black'}\n//                     textAnchor='middle'\n//                     filter='url(#solid)'\n//                   >\n//                     {node.name}\n//                   </text> */}\n//                 </g>\n//               );\n//             }\n//           })}\n//         </svg>\n//       </div>\n//     </div>\n//   );\n// };\n//export default Chemicals;\n\nclass Chemicals extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chemicals: [],\n      nodes: [],\n      activeState: null\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.chemicals.length === 0) {\n      sanityClient\n        .fetch(query)\n        .then(res => {\n          //setUpForceLayout(res);\n          this.setState({ chemicals: res });\n          this.setUpForceLayout(res);\n        })\n        .catch(err => {\n          console.error(err);\n        });\n    }\n  }\n\n  setUpForceLayout = res => {\n    const [min, max] = extent(res, d => d.relatedProjects);\n    radiusScale.domain([0, max]);\n\n    const simulationNodes = res\n      .filter(r => r.relatedProjects > 0)\n      .sort((a, b) => {\n        return b.relatedProjects - a.relatedProjects;\n      })\n      .map(r => {\n        r.radius = radiusScale(r.relatedProjects);\n        return r;\n      });\n\n    const links = simulationNodes\n      .map((n, i) => {\n        if (i < simulationNodes.length - 1) {\n          return {\n            source: i,\n            target: i + 1\n          };\n        }\n      })\n      .slice(0, simulationNodes.length - 1);\n\n    const simulation = forceSimulation(simulationNodes)\n      .force('charge', forceManyBody().strength(5))\n      //.force('link', forceLink(links))\n      .force('center', forceCenter(svgWidth / 2, svgHeight / 2))\n      .force(\n        'collision',\n        forceCollide()\n          .radius(n => n.radius + 10)\n          .strength(1)\n          .iterations(2)\n      )\n      .on('tick', a => {\n        simulationNodes.forEach(function(d) {\n          d.x =\n            d.x < radiusScale(d.relatedProjects)\n              ? radiusScale(d.relatedProjects)\n              : d.x > svgWidth - radiusScale(d.relatedProjects)\n              ? svgWidth - radiusScale(d.relatedProjects)\n              : d.x;\n\n          d.y =\n            d.y < radiusScale(d.relatedProjects)\n              ? radiusScale(d.relatedProjects)\n              : d.y > svgHeight - radiusScale(d.relatedProjects)\n              ? svgHeight - radiusScale(d.relatedProjects)\n              : d.y;\n        });\n        this.setState({ nodes: simulationNodes });\n      })\n      .on('end', a => {\n        //this.setState({ nodes: simulationNodes });\n      });\n  };\n\n  selectChemical = (type, value) => {\n    this.context.toggleSelected({ type: type, value: value });\n    const queryParams = parseQueryParams(this.context.selected);\n    this.props.history.push(`/${this.context.section}${queryParams}`);\n  };\n\n  render() {\n    const { nodes, chemicals, activeIndex } = this.state;\n    const { isMobile } = this.props;\n    const selected = this.context.selected\n      ? this.context.selected.map(s => s.value)\n      : [];\n    return (\n      <div className='viz-container'>\n        <ReactTooltip\n          place='top'\n          theme='dark'\n          effect='solid'\n          className='tooltip-extra-class'\n        />\n        <Search\n          items={chemicals}\n          selectionCallBack={this.selectChemical}\n          type={'chemical'}\n        />\n        <Responsive minWidth={600}>\n          <div\n            className='w-100 d-flex flex-column'\n            style={{ height: 'calc(100% - 33px)' }}\n          >\n            <svg width={svgWidth} height={svgHeight}>\n              {nodes.map((node, index) => {\n                const radius = radiusScale(node.relatedProjects);\n                if (node.relatedProjects > 0) {\n                  return (\n                    <g key={index}>\n                      <circle\n                        data-tip={\n                          radiusScale(node.relatedProjects) <= 10\n                            ? node.name.toUpperCase()\n                            : ''\n                        }\n                        ref={node.name}\n                        cx={node.x}\n                        cy={node.y}\n                        className={`circle ${\n                          selected.indexOf(node.name) > -1 ||\n                          activeIndex === index\n                            ? 'active'\n                            : ''\n                        }`}\n                        stroke='black'\n                        strokeWidth={1}\n                        r={radiusScale(node.relatedProjects)}\n                        onClick={() =>\n                          this.selectChemical('chemical', node.name)\n                        }\n                        onMouseEnter={() => {\n                          this.setState({ activeIndex: index });\n                          ReactTooltip.show(findDOMNode(this.refs[node.name]));\n                        }}\n                        onMouseLeave={() => {\n                          this.setState({ activeIndex: null });\n                          ReactTooltip.hide(findDOMNode(this.refs[node.name]));\n                        }}\n                        style={{ cursor: 'pointer' }}\n                      />\n\n                      {radiusScale(node.relatedProjects) > 10 && (\n                        <g>\n                          <rect\n                            x={node.x - (node.name.length * 5.2) / 2}\n                            y={node.y - 5}\n                            width={node.name.length * 5.2}\n                            height={10}\n                            className={`rect ${\n                              selected.indexOf(node.name) > -1 ||\n                              activeIndex === index\n                                ? 'active'\n                                : ''\n                            }`}\n                          />\n                          <text\n                            dx={node.x}\n                            dy={node.y}\n                            className={`text ${\n                              selected.indexOf(node.name) > -1 ||\n                              activeIndex === index\n                                ? 'active'\n                                : ''\n                            }`}\n                            textAnchor='middle'\n                            //filter='url(#solid)'\n                          >\n                            {node.name}\n                          </text>\n                        </g>\n                      )}\n                    </g>\n                  );\n                }\n              })}\n            </svg>\n          </div>\n        </Responsive>\n      </div>\n    );\n  }\n}\n\nconst wrappedClass = withRouter(Chemicals);\nwrappedClass.WrappedComponent.contextType = AppContext;\nexport default wrappedClass;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport sanityClient from '../lib/sanity';\nimport { scaleLinear } from 'd3-scale';\nimport { extent } from 'd3-array';\nimport { AppContext } from '../appContext';\nimport Search from './Search';\nimport { parseQueryParams } from '../utils';\nimport Loader from './Loader';\nimport Responsive from 'react-responsive';\n\nconst query = `*[_type==\"topic\"]{\n  _id, name,\n  \"relatedProjects\": count(*[_type=='project' && references(^._id)])\n}`;\n\nconst Topics = ({ type, history }) => {\n  const [topics, setTopics] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [activeIndex, setActiveIndex] = useState(null);\n  const context = useContext(AppContext);\n\n  useEffect(() => {\n    if (topics.length === 0) {\n      sanityClient\n        .fetch(query)\n        .then(res => {\n          handleStatusChange(res);\n          return () => {\n            // Clean up\n          };\n        })\n        .catch(err => {\n          console.error(err);\n        });\n    }\n  }, [type]);\n\n  function handleStatusChange(res) {\n    setTopics(res);\n    setLoading(false);\n  }\n\n  const selectTopic = (type, value) => {\n    context.toggleSelected({ type: type, value: value });\n    const queryParams = parseQueryParams(context.selected);\n    history.push(`/${context.section}${queryParams}`);\n  };\n\n  const selected = context.selected ? context.selected.map(s => s.value) : [];\n\n  const [min, max] = extent(topics, d => d.relatedProjects);\n  const wordScale = scaleLinear()\n    .range([10, 36])\n    .domain([0, max]);\n\n  return (\n    <div className='viz-container'>\n      {loading && <Loader />}\n      <Search items={topics} selectionCallBack={selectTopic} type={'topic'} />\n      <Responsive minWidth={600}>\n        <div\n          className='w-100 d-flex flex-wrap align-items-baseline mt-3 overflow-auto'\n          style={{ height: 'calc(100% - 33px)' }}\n        >\n          {topics\n            .sort((a, b) => {\n              return b.relatedProjects - a.relatedProjects;\n            })\n            .map((topic, index) => {\n              return (\n                <div\n                  className={`position-relative mr-3`}\n                  key={index}\n                  style={{\n                    height: '45px'\n                  }}\n                  onClick={() => selectTopic('topic', topic.name)}\n                  onMouseEnter={() => setActiveIndex(index)}\n                  onMouseLeave={() => setActiveIndex(null)}\n                >\n                  <div\n                    className='cursor-pointer'\n                    style={{\n                      fontSize: wordScale\n                        ? wordScale(topic.relatedProjects)\n                        : '10px',\n                      bottom: '3px'\n                    }}\n                  >\n                    {topic.name} <sup>{topic.relatedProjects}</sup>\n                  </div>\n                  <div\n                    className={`topic-block-line ${\n                      selected.indexOf(topic.name) > -1 || activeIndex === index\n                        ? 'active'\n                        : ''\n                    }`}\n                  />\n                </div>\n              );\n            })}\n        </div>\n      </Responsive>\n    </div>\n  );\n};\n\nexport default withRouter(Topics);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { findDOMNode } from 'react-dom';\nimport sanityClient from '../lib/sanity';\nimport {\n  forceSimulation,\n  forceManyBody,\n  forceCenter,\n  forceCollide,\n  forceLink,\n  forceRadial\n} from 'd3-force';\nimport { scaleLinear } from 'd3-scale';\nimport { extent } from 'd3-array';\nimport { flatten, groupBy } from 'lodash';\nimport ReactTooltip from 'react-tooltip';\nimport { AppContext } from '../appContext';\nimport Search from './Search';\nimport { parseQueryParams } from '../utils';\nimport Responsive from 'react-responsive';\n\nconst query = `*[_type == \"project\"]{\n  \"researchers\": researchers[]->\n}`;\n\nconst svgWidth = window.innerWidth / 2 - 60;\nconst svgHeight = window.innerHeight - 140;\n\nconst radiusScale = scaleLinear().range([0, 60]);\n\nclass Researchers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      researchers: [],\n      nodes: [],\n      links: [],\n      activeIndex: null\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.researchers.length === 0) {\n      sanityClient\n        .fetch(query)\n        .then(res => {\n          //setUpForceLayout(res);\n          const researchersOccurency = flatten(\n            res.map(r => r.researchers.map(v => v.name))\n          );\n          const researchersCount = researchersOccurency.reduce((prev, cur) => {\n            prev[cur] = (prev[cur] || 0) + 1;\n            return prev;\n          }, {});\n          const nodes = Object.entries(researchersCount).map(v => {\n            return { name: v[0], value: v[1] };\n          });\n\n          const projects = res.map(r => r.researchers.map(v => v.name));\n\n          let links = [];\n\n          projects.map((researchers, index) => {\n            const length = researchers.length;\n            for (let i = 0; i < length; i++) {\n              const researcher1 = researchers[0];\n              const remainingResearchers = researchers;\n              remainingResearchers.splice(0, 1);\n\n              if (remainingResearchers.length > 0) {\n                for (let j = 0; j < remainingResearchers.length; j++) {\n                  const researcher2 = remainingResearchers[j];\n                  const sortedResearchers = [researcher1, researcher2].sort();\n\n                  links.push(sortedResearchers);\n                  //console.log(researcher1, researcher2);\n                  // if (!links[researcher1]) {\n                  //   links[researcher1] = {};\n                  //   links[researcher1][researcher2] = { count: 1 };\n                  // } else if (!links[researcher1][researcher2]) {\n                  //   links[researcher1][researcher2] = { count: 1 };\n                  // } else {\n                  //   links[researcher1][researcher2].count += 1;\n                  // }\n                }\n              }\n            }\n          });\n\n          console.log(links);\n\n          this.setState({ researchers: nodes });\n          this.setUpForceLayout(nodes, links);\n        })\n        .catch(err => {\n          console.error(err);\n        });\n    }\n  }\n\n  setUpForceLayout = (researchersNodes, researchersLinks) => {\n    const [min, max] = extent(researchersNodes, d => d.value);\n    radiusScale.domain([0, max]);\n\n    const simulationNodes = researchersNodes\n      .filter(r => r.value > 0)\n      .map(r => {\n        r.radius = radiusScale(r.value);\n        return r;\n      });\n\n    const researchersLinksGrouped = Object.values(groupBy(researchersLinks));\n    const formattedLinks = [];\n\n    researchersLinksGrouped.map((value, i) => {\n      const source = researchersNodes.findIndex(v => v.name === value[0][0]);\n      const target = researchersNodes.findIndex(v => v.name === value[0][1]);\n      const weight = value.length;\n\n      formattedLinks.push({ source: source, target: target, weight: weight });\n    });\n\n    this.setState({ links: formattedLinks });\n\n    const simulation = forceSimulation(simulationNodes)\n      .force('charge', forceManyBody().strength(0))\n      .force(\n        'link',\n        forceLink(formattedLinks).strength(d => {\n          return d.weight * 0.1;\n        })\n      )\n      .force('r', forceRadial(150))\n      .force('center', forceCenter(svgWidth / 2, svgHeight / 2))\n      .force(\n        'collision',\n        forceCollide()\n          .radius(n => n.radius + 17)\n          .strength(1)\n          .iterations(30)\n      )\n      .on('tick', a => {\n        simulationNodes.forEach(function(d) {\n          d.x =\n            d.x < radiusScale(d.value)\n              ? radiusScale(d.value) + 5\n              : d.x > svgWidth - radiusScale(d.value)\n              ? svgWidth - radiusScale(d.value) - 5\n              : d.x;\n          d.y =\n            d.y < radiusScale(d.value)\n              ? radiusScale(d.value) + 5\n              : d.y > svgHeight - radiusScale(d.value)\n              ? svgHeight - radiusScale(d.value) - 5\n              : d.y;\n        });\n        this.setState({ nodes: simulationNodes });\n      });\n  };\n\n  selectResearcher = (type, value) => {\n    this.context.toggleSelected({ type: type, value: value });\n    const queryParams = parseQueryParams(this.context.selected);\n    this.props.history.push(`/${this.context.section}${queryParams}`);\n  };\n\n  render() {\n    const { nodes, links, researchers, activeIndex } = this.state;\n    const selected = this.context.selected\n      ? this.context.selected.map(s => s.value)\n      : [];\n    return (\n      <div className='viz-container'>\n        <ReactTooltip\n          place='top'\n          theme='dark'\n          effect='solid'\n          className='tooltip-extra-class'\n        />\n        <Search\n          items={researchers}\n          selectionCallBack={this.selectResearcher}\n          type={'researcher'}\n        />\n        <Responsive minWidth={600}>\n          <div\n            className='w-100 d-flex flex-column mt-4'\n            style={{ height: 'calc(100% - 33px)' }}\n          >\n            <svg width={svgWidth} height={svgHeight}>\n              {links.map((link, index) => {\n                return (\n                  <g key={index}>\n                    <line\n                      x1={link.source.x}\n                      y1={link.source.y}\n                      x2={link.target.x}\n                      y2={link.target.y}\n                      style={{ strokeWidth: link.weight }}\n                      stroke='black'\n                    />\n                  </g>\n                );\n              })}\n              {nodes.map((node, index) => {\n                const radius = radiusScale(node.value);\n                if (node.value > 0) {\n                  return (\n                    <g key={index}>\n                      <circle\n                        data-tip={\n                          radiusScale(node.value) <= 10\n                            ? node.name.toUpperCase()\n                            : ''\n                        }\n                        ref={node.name}\n                        cx={node.x}\n                        cy={node.y}\n                        className={`circle ${\n                          selected.indexOf(node.name) > -1 ||\n                          activeIndex === index\n                            ? 'active'\n                            : ''\n                        }`}\n                        stroke='black'\n                        strokeWidth={1}\n                        r={radiusScale(node.value)}\n                        onClick={() =>\n                          this.selectResearcher('researcher', node.name)\n                        }\n                        onMouseEnter={() => {\n                          this.setState({ activeIndex: index });\n                          ReactTooltip.show(findDOMNode(this.refs[node.name]));\n                        }}\n                        onMouseLeave={() => {\n                          this.setState({ activeIndex: null });\n                          ReactTooltip.hide(findDOMNode(this.refs[node.name]));\n                        }}\n                      />\n\n                      {radiusScale(node.value) > 10 && (\n                        <g>\n                          <rect\n                            x={node.x - (node.name.length * 5.2) / 2}\n                            y={node.y - 4}\n                            width={node.name.length * 5.2}\n                            height={10}\n                            className={`rect ${\n                              selected.indexOf(node.name) > -1 ||\n                              activeIndex === index\n                                ? 'active'\n                                : ''\n                            }`}\n                          />\n                          <text\n                            dx={node.x}\n                            dy={node.y}\n                            className={`text ${\n                              selected.indexOf(node.name) > -1 ||\n                              activeIndex === index\n                                ? 'active'\n                                : ''\n                            }`}\n                            textAnchor='middle'\n                            //filter='url(#solid)'\n                          >\n                            {node.name}\n                          </text>\n                        </g>\n                      )}\n                    </g>\n                  );\n                }\n              })}\n            </svg>\n          </div>\n        </Responsive>\n      </div>\n    );\n  }\n}\n\nconst wrappedClass = withRouter(Researchers);\nwrappedClass.WrappedComponent.contextType = AppContext;\nexport default wrappedClass;\n","import React from 'react';\n\nconst Location = ({\n  coordinates,\n  zoom,\n  country,\n  city,\n  callbackClick,\n  selected,\n  setActiveIndex,\n  activeIndex,\n  index\n}) => {\n  return (\n    <div\n      className={`location-block overflow-hidden ${\n        selected.indexOf(city) > -1 || activeIndex === index ? 'active' : ''\n      }`}\n      onClick={() => callbackClick('location', city)}\n      onMouseEnter={() => setActiveIndex(index)}\n      onMouseLeave={() => setActiveIndex(null)}\n    >\n      <div\n        className='location-map'\n        style={{\n          height: '100%',\n          width: '100%',\n          position: 'absolute',\n          backgroundImage: `url(https://api.mapbox.com/styles/v1/gabrielecolombo/cjsnc1pt701yf1fmoasvam9wv/static/${\n            coordinates.lng\n          },${\n            coordinates.lat\n          },${zoom},0,0/600x600?access_token=pk.eyJ1IjoiZ2FicmllbGVjb2xvbWJvIiwiYSI6ImNpdGZqNWY1MjAwZWUyeW1qbDhkZHV2OXMifQ.Nem-UVIW-71T6yQQvjrtog)`\n        }}\n      />\n      <div className='location-text'>\n        <div\n          className={`location-country ${\n            selected.indexOf(city) > -1 || activeIndex === index\n              ? 'underline-location'\n              : ''\n          }`}\n        >\n          {country}\n        </div>\n        <div className={`location-city`}>{city}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Location;\n","import React, { useState, useEffect, useContext, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport { withRouter } from 'react-router-dom';\nimport sanityClient from '../lib/sanity';\nimport { ScrollToHOC, ScrollArea } from 'react-scroll-to';\nimport Location from './Location';\nimport { AppContext } from '../appContext';\nimport Search from './Search';\nimport Loader from './Loader';\nimport { parseQueryParams } from '../utils';\nimport Responsive from 'react-responsive';\n\nconst query = `*[_type == \"location\"]{\n  _id, city, coordinates, zoom,\n  country->,\n  \"relatedProjects\": count(*[_type=='project' && references(^._id)])\n}`;\n\nlet offsets = {};\n\nconst Locations = ({ type, history, scrollTo }) => {\n  const [locations, setLocations] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [activeIndex, setActiveIndex] = useState(null);\n  const context = useContext(AppContext);\n  useEffect(() => {\n    if (locations.length === 0) {\n      sanityClient\n        .fetch(query)\n        .then(res => {\n          handleStatusChange(res);\n          return () => {\n            // Clean up\n          };\n        })\n        .catch(err => {\n          console.error(err);\n        });\n    }\n  }, [type]);\n\n  const handleStatusChange = res => {\n    setLocations(res);\n    res\n      .filter(v => v.coordinates.lat)\n      .forEach((v, i) => {\n        offsets[v.city.toLowerCase()] = getYOffset(i);\n      });\n    console.log(offsets);\n    setLoading(false);\n  };\n\n  const selectLocation = (type, value) => {\n    context.toggleSelected({ type: type, value: value });\n    const queryParams = parseQueryParams(context.selected);\n    history.push(`/${context.section}${queryParams}`);\n    console.log(offsets[value]);\n    scrollTo({ id: 'locations', y: offsets[value] });\n  };\n\n  const getYOffset = index => {\n    const rowHeight = (window.innerWidth / 100) * 16;\n    return Math.floor(index / 3) * rowHeight;\n  };\n\n  return (\n    <div className='viz-container'>\n      {loading && <Loader />}\n      <Search\n        items={locations}\n        selectionCallBack={selectLocation}\n        type={'location'}\n        objectKey={'city'}\n      />\n      <Responsive minWidth={600}>\n        <ScrollArea\n          id='locations'\n          className='overflow-auto'\n          style={{ height: 'calc(100% - 33px)' }}\n        >\n          <div className='w-100 d-flex flex-wrap mt-4'>\n            {locations.map((location, index) => {\n              if (location.coordinates.lat) {\n                return (\n                  <Location\n                    key={index}\n                    index={index}\n                    activeIndex={activeIndex}\n                    coordinates={location.coordinates}\n                    y={() => getYOffset(index)}\n                    zoom={location.zoom}\n                    country={location.country.name}\n                    city={location.city}\n                    callbackClick={selectLocation}\n                    selected={\n                      context.selected ? context.selected.map(s => s.value) : []\n                    }\n                    setActiveIndex={setActiveIndex}\n                  />\n                );\n              }\n            })}\n          </div>\n        </ScrollArea>\n      </Responsive>\n    </div>\n  );\n};\n\nexport default ScrollToHOC(withRouter(Locations));\n","import React, { useState, useEffect, useContext } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport sanityClient from '../lib/sanity';\nimport { scaleLinear } from 'd3-scale';\nimport { extent } from 'd3-array';\nimport { AppContext } from '../appContext';\nimport Search from './Search';\nimport { parseQueryParams } from '../utils';\nimport Responsive from 'react-responsive';\n\nconst query = `*[_type == \"methodology\"]{\n  _id, name,\n  \"relatedProjects\": count(*[_type=='project' && references(^._id)])\n}`;\n\nconst Methodologies = ({ type, history }) => {\n  const [methodologies, setMethodologies] = useState([]);\n  const context = useContext(AppContext);\n\n  useEffect(() => {\n    if (methodologies.length === 0) {\n      sanityClient\n        .fetch(query)\n        .then(res => {\n          handleStatusChange(res);\n          return () => {\n            // Clean up\n          };\n        })\n        .catch(err => {\n          console.error(err);\n        });\n    }\n  }, [type]);\n\n  const handleStatusChange = res => {\n    setMethodologies(res);\n  };\n\n  const selectMethod = (type, value) => {\n    context.toggleSelected({ type: type, value: value });\n    const queryParams = parseQueryParams(context.selected);\n    history.push(`/${context.section}${queryParams}`);\n  };\n\n  const [min, max] = extent(methodologies, d => d.relatedProjects);\n  const heightScale = scaleLinear()\n    .range([30, 150])\n    .domain([0, max]);\n\n  return (\n    <div className='viz-container'>\n      <Search\n        items={methodologies}\n        selectionCallBack={selectMethod}\n        type={'method'}\n      />\n      <Responsive minWidth={600}>\n        <div\n          className='w-100 overflow-auto'\n          style={{ height: 'calc(100% - 33px)' }}\n        >\n          {methodologies\n            .sort((a, b) => b.relatedProjects - a.relatedProjects)\n            .map((methodology, index) => {\n              const selected = context.selected.map(s => s.value);\n              return (\n                <div\n                  className={`px-3 method-block ${\n                    selected.indexOf(methodology.name) > -1 ? 'active' : ''\n                  }`}\n                  key={index}\n                  style={{\n                    height: `${heightScale(methodology.relatedProjects)}px`\n                  }}\n                  onClick={() => selectMethod('method', methodology.name)}\n                >\n                  {methodology.relatedProjects} {methodology.name}\n                </div>\n              );\n            })}\n        </div>\n      </Responsive>\n    </div>\n  );\n};\n\nexport default withRouter(Methodologies);\n","import React, { useState, useEffect, useContext } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport sanityClient from '../lib/sanity';\nimport { scaleOrdinal, scaleLinear } from 'd3-scale';\nimport { extent } from 'd3-array';\nimport { groupBy } from 'lodash';\nimport { AppContext } from '../appContext';\nimport { timeLabels, quantizeTime } from '../timeUtils';\nimport { parseQueryParams } from '../utils';\nimport Responsive from 'react-responsive';\n\nconst query = `*[_type == \"project\"]{\n  endDate, startDate\n}`;\n\nconst monthDiff = (d1, d2) => {\n  var months;\n  months = (d2.getFullYear() - d1.getFullYear()) * 12;\n  months -= d1.getMonth() + 1;\n  months += d2.getMonth();\n  return months <= 0 ? 0 : months;\n};\n\nconst Times = ({ type, history }) => {\n  const [times, setTimes] = useState([]);\n  const [derivedTimes, setDerivedTimes] = useState([]);\n  const context = useContext(AppContext);\n\n  // Similar to componentDidMount and componentDidUpdate:\n  useEffect(() => {\n    if (times.length === 0) {\n      sanityClient\n        .fetch(query)\n        .then(res => {\n          handleStatusChange(res);\n          return () => {\n            // Clean up\n          };\n        })\n        .catch(err => {\n          console.error(err);\n        });\n    }\n  }, [type]);\n\n  const handleStatusChange = res => {\n    const derivedTimes = res.map((time, index) => {\n      const diff = monthDiff(new Date(time.startDate), new Date(time.endDate));\n      time.months = quantizeTime(diff);\n      return time;\n    });\n    setDerivedTimes(derivedTimes);\n\n    const sortedTimes = derivedTimes.sort((a, b) => a.months - b.months);\n    const groupedByTimes = Object.values(groupBy(sortedTimes, el => el.months));\n\n    setTimes(groupedByTimes.reverse());\n  };\n\n  const selectTime = (type, value) => {\n    context.toggleSelected({ type: type, value: value });\n    const queryParams = parseQueryParams(context.selected);\n    history.push(`/${context.section}${queryParams}`);\n  };\n\n  const selected = context.selected.map(s => s.value);\n\n  const [min, max] = extent(times, d => d.length);\n  const heightScale = scaleLinear()\n    .range([30, 200])\n    .domain([0, max]);\n\n  const widthScale = scaleOrdinal()\n    .range([50, 60, 70, 80, 90, 100])\n    .domain([0, 3, 6, 12, 24, 36]);\n\n  const sum = times.reduce((a, b) => {\n    return a + b.length;\n  }, 0);\n\n  return (\n    <div className='viz-container'>\n      {/* <Search items={times} selectionCallBack={selectTime} type={'time'} /> */}\n      <Responsive minWidth={600}>\n        <div\n          className='w-100 mt-3 overflow-auto'\n          style={{ height: 'calc(100% - 33px)' }}\n        >\n          {times.map((time, index) => {\n            const duration = time[0].months;\n            return (\n              <div\n                className={`px-3 time-block ${\n                  selected.indexOf(duration) > -1 ? 'active' : ''\n                }`}\n                key={index}\n                style={{\n                  width: `${widthScale(duration)}%`,\n                  height: `${Math.floor((time.length / sum) * 100)}%`,\n                  borderTop: index === 0 ? '1px solid #d7d7d7' : 'none'\n                }}\n                onClick={() => selectTime('time', duration)}\n              >\n                <div>{`${time.length} projects`}</div>\n                <div>{`${timeLabels[duration]}`}</div>\n              </div>\n            );\n          })}\n        </div>\n      </Responsive>\n    </div>\n  );\n};\n\nexport default withRouter(Times);\n","import React, { Component } from 'react';\nimport queryString from 'query-string';\nimport Header from './Header';\nimport { withRouter } from 'react-router-dom';\nimport Chemicals from './Chemicals';\nimport Topics from './Topics';\nimport Researchers from './Researchers';\nimport Locations from './Locations';\nimport Methodologies from './Methodologies';\nimport Times from './Times';\nimport Loader from './Loader';\nimport { AppContext } from '../appContext';\nimport { find, findIndex } from 'lodash';\n\nconst Projects = React.lazy(() => import('./Projects'));\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      section: 'chemical',\n      setSection: this.setSection,\n      selectedChemical: '',\n      setSelectedChemical: this.setSelectedChemical,\n      selectedLocation: '',\n      setSelectedLocation: this.setSelectedLocation,\n      selectedTopic: '',\n      setSelectedTopic: this.setSelectedTopic,\n      selected: [],\n      setSelected: this.setSelected,\n      toggleSelected: this.toggleSelected\n    };\n  }\n\n  setSelectedLocation = location => {\n    this.setState({\n      selectedLocation: location === this.state.selectedLocation ? '' : location\n    });\n  };\n\n  setSelectedTopic = topic => {\n    this.setState({\n      selectedTopic: topic === this.state.selectedTopic ? '' : topic\n    });\n  };\n\n  setSelectedChemical = chemical => {\n    this.setState({\n      selectedChemical: chemical === this.state.selectedChemical ? '' : chemical\n    });\n  };\n\n  setSection = section => {\n    this.setState({\n      section: section\n    });\n  };\n\n  setSelected = selected => {\n    console.log(selected);\n    this.setState({\n      selected: selected\n    });\n  };\n\n  toggleSelected = selected => {\n    const selectedArray = this.state.selected;\n    if (selected.type && selected.value !== null) {\n      if (find(selectedArray, selected)) {\n        const index = findIndex(selectedArray, selected);\n        selectedArray.splice(index, 1);\n      } else {\n        selectedArray.push(selected);\n      }\n      this.setState({\n        selected: selectedArray\n      });\n    }\n  };\n\n  componentDidMount() {\n    const pathname = this.props.location.pathname.split('/');\n    this.setSection(pathname[1]);\n    const parsed = queryString.parse(this.props.location.search);\n    if (parsed.selected && Array.isArray(parsed.selected)) {\n      parsed.selected.forEach(p => {\n        const selected = { type: pathname[1], value: p };\n        this.toggleSelected(selected);\n      });\n    } else if (parsed.selected && !Array.isArray(parsed.selected)) {\n      const selected = { type: pathname[1], value: parsed.selected };\n      this.toggleSelected(selected);\n    }\n  }\n\n  render() {\n    const pathname = this.props.location.pathname.split('/')[1];\n    return (\n      <AppContext.Provider value={this.state}>\n        <React.Suspense fallback={<Loader />}>\n          <div className='w-100 h-100 d-flex flex-column'>\n            <Header />\n            <div className='home-container'>\n              <div className='half-container viz'>\n                {pathname === 'chemical' && <Chemicals />}\n                {pathname === 'topic' && <Topics />}\n                {pathname === 'location' && <Locations />}\n                {pathname === 'researcher' && <Researchers />}\n                {pathname === 'time' && <Times />}\n                {pathname === 'method' && <Methodologies />}\n              </div>\n              <div className='half-container list'>\n                <Projects />\n              </div>\n            </div>\n          </div>\n        </React.Suspense>\n      </AppContext.Provider>\n    );\n  }\n}\n\nHome.contextType = AppContext;\n\nexport default Home;\n","import React, { useContext } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { AppContext } from '../appContext';\n\nconst Project = ({ type, elements, objectKey, history }) => {\n  const context = useContext(AppContext);\n\n  const changeSection = (type, name) => {\n    context.setSelected({ type: type, value: name });\n    history.push(`/${type}?selected=${name}`);\n  };\n\n  return (\n    <div className='d-flex flex-wrap'>\n      {elements ? (\n        elements.map((el, index) => {\n          if (el) {\n            const name = objectKey ? el[objectKey] : el.name;\n            return (\n              <React.Fragment key={index}>\n                <div className='mr-1 link list-el'>\n                  <div onClick={() => changeSection(type, name)}>{name}</div>\n                </div>\n                <span className='mr-1 list-el'>\n                  {index < elements.length - 1 ? '|' : ''}\n                </span>\n              </React.Fragment>\n            );\n          }\n        })\n      ) : (\n        <div className='mr-1 list-el'>Not found</div>\n      )}\n    </div>\n  );\n};\n\nexport default withRouter(Project);\n","import React from 'react';\nimport List from './List';\n\nconst ProjectPageSideBar = ({ project }) => {\n  return (\n    <div className='right-column'>\n      <div className='d-flex flex-column my-4'>\n        <div className='list-title'>LOCATIONS</div>\n        <List type={'location'} elements={project.places} objectKey={'city'} />\n      </div>\n      <div className='d-flex flex-column my-4'>\n        <div className='list-title'>CHEMICALS</div>\n        <List type={'chemical'} elements={project.chemicals} />\n      </div>\n      <div className='d-flex flex-column my-4'>\n        <div className='list-title'>METHODS</div>\n        <List type={'method'} elements={project.methods} />\n      </div>\n      <div className='d-flex flex-column my-4'>\n        <div className='list-title'>TOPICS</div>\n        <div className='d-flex flex-wrap'>\n          <List type={'topic'} elements={project.topics} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectPageSideBar;\n","import React from 'react';\nimport { withGetScreen } from 'react-getscreen';\n\nconst Video = ({ url, isMobile }) => {\n  const videoId = url.split('/')[3];\n\n  return (\n    <div\n      className='w-100 mt-4'\n      style={{ paddingLeft: isMobile() ? '0px' : '80px' }}\n    >\n      <iframe\n        title='project-video'\n        src={`https://player.vimeo.com/video/${videoId}`}\n        width={isMobile() ? '100%' : '640px'}\n        height={isMobile() ? '220px' : '360px'}\n        frameBorder='0'\n        allowFullScreen\n      />\n    </div>\n  );\n};\n\nexport default withGetScreen(Video);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport asyncLoading from 'react-async-loader';\n\nclass ReactStreetview extends React.Component {\n  constructor() {\n    super();\n    this.streetView = null;\n  }\n\n  initialize(canvas) {\n    if (this.props.googleMaps) {\n      this.streetView = new this.props.googleMaps.StreetViewPanorama(\n        canvas,\n        this.props.streetViewPanoramaOptions\n      );\n\n      this.streetView.addListener('position_changed', () => {\n        if (this.props.onPositionChanged) {\n          this.props.onPositionChanged(this.streetView.getPosition());\n        }\n      });\n\n      this.streetView.addListener('pov_changed', () => {\n        if (this.props.onPovChanged) {\n          this.props.onPovChanged(this.streetView.getPov());\n        }\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.initialize(ReactDOM.findDOMNode(this));\n  }\n\n  componentDidUpdate() {\n    console.log('componentDidUpdate');\n    this.initialize(ReactDOM.findDOMNode(this));\n  }\n  componentWillUnmount() {\n    if (this.streetView) {\n      this.props.googleMaps.event.clearInstanceListeners(this.streetView);\n    }\n  }\n\n  render() {\n    return (\n      <div\n        style={{\n          height: '100%'\n        }}\n      />\n    );\n  }\n}\n\nReactStreetview.propTypes = {\n  apiKey: PropTypes.string.isRequired,\n  streetViewPanoramaOptions: PropTypes.object.isRequired,\n  onPositionChanged: PropTypes.func,\n  onPovChanged: PropTypes.func\n};\n\nReactStreetview.defaultProps = {\n  streetViewPanoramaOptions: {\n    position: { lat: 46.9171876, lng: 17.8951832 },\n    pov: { heading: 0, pitch: 0 },\n    zoom: 1\n  }\n};\n\nfunction mapScriptsToProps(props) {\n  const googleMapsApiKey = props.apiKey;\n  return {\n    googleMaps: {\n      globalPath: 'google.maps',\n      url: 'https://maps.googleapis.com/maps/api/js?key=' + googleMapsApiKey,\n      jsonp: true\n    }\n  };\n}\n\nexport default asyncLoading(mapScriptsToProps)(ReactStreetview);\n","import React, { useState, useEffect, useContext } from 'react';\nimport sanityClient from '../lib/sanity';\nimport { AppContext } from '../appContext';\nimport Loader from './Loader';\nimport ReactMapboxGl, { Layer, Feature } from 'react-mapbox-gl';\nimport { scaleLinear } from 'd3-scale';\nimport { extent } from 'd3-array';\nimport ReactStreetview from './ReactStreetView';\nimport bbox from '@turf/bbox';\nimport { lineString } from '@turf/helpers';\n\nconst query = `*[_type == \"specialProject1\"]{\n  _id, name, coordinates, stringCoordinates, streetviewUrl, streetviewCoordinates, streetviewHead, streetviewPitch, streetviewZoom,\n  \"images\": images[].asset->url,\n}`;\n\nconst radiusScale = scaleLinear().range([0, 30]);\n\nconst SpecialProject = ({}) => {\n  const [projects, setProjects] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [bounds, setBounds] = useState(null);\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  const context = useContext(AppContext);\n  // Similar to componentDidMount and componentDidUpdate:\n  useEffect(() => {\n    sanityClient\n      .fetch(query)\n      .then(res => {\n        handleStatusChange(res);\n        return () => {\n          // Clean up\n        };\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  }, [context]);\n\n  const Map = ReactMapboxGl({\n    accessToken:\n      'pk.eyJ1IjoiZ2FicmllbGVjb2xvbWJvIiwiYSI6ImNpdGZqNWY1MjAwZWUyeW1qbDhkZHV2OXMifQ.Nem-UVIW-71T6yQQvjrtog'\n  });\n\n  const handleStatusChange = res => {\n    setProjects(res);\n    console.log(res);\n    const [min, max] = extent(res, d => d.images.length);\n    radiusScale.domain([0, max]);\n    setLoading(false);\n\n    const coordinates = res.map(p => {\n      return [p.coordinates.lng, p.coordinates.lat];\n    });\n    const line = lineString(coordinates);\n    const bounds = bbox(line);\n    console.log(bounds);\n    setBounds(bounds);\n  };\n\n  const getCirclePaint = (project, index) => {\n    return {\n      'circle-radius': radiusScale(project.images.length),\n      'circle-color': index === selectedIndex ? '#000000' : '#FFFFFF',\n      'circle-stroke-color': '#000000',\n      'circle-stroke-width': 2,\n      'circle-opacity': 1\n    };\n  };\n\n  const googleMapsApiKey = 'AIzaSyDQsgQX8xc6_AiLmbwhZrdpELQJC8rlrII';\n\n  if (projects && projects[selectedIndex]) {\n    console.log(projects[selectedIndex]);\n  }\n\n  let map = null;\n  let mapZoom = 12;\n\n  const activeProject =\n    projects && projects[selectedIndex] ? projects[selectedIndex] : null;\n\n  const streetviewOptions = {\n    // position: {\n    //   lat: projects[selectedIndex].coordinates.lat,\n    //   lng: projects[selectedIndex].coordinates.lng\n    // },\n    position: {\n      lat:\n        activeProject && activeProject.streetviewCoordinates\n          ? activeProject.streetviewCoordinates.lat\n          : 0,\n      lng:\n        activeProject && activeProject.streetviewCoordinates\n          ? activeProject.streetviewCoordinates.lng\n          : 0\n    },\n    pov: {\n      heading:\n        activeProject && activeProject.streetviewHead\n          ? activeProject.streetviewHead\n          : 0,\n      pitch:\n        activeProject && activeProject.streetviewPitch\n          ? activeProject.streetviewPitch\n          : 1\n    },\n    zoom: 1,\n    motionTracking: false,\n    motionTrackingControl: false,\n    linksControl: false,\n    panControl: false,\n    zoomControl: false,\n    addressControl: false,\n    fullscreenControl: false,\n    enableCloseButton: false,\n    disableDefaultUI: true,\n    showRoadLabels: false,\n    clickToGo: false,\n    scrollwheel: false\n  };\n\n  return (\n    <div className='w-100 h-100 d-flex mt-5' style={{ height: '600px' }}>\n      <div\n        className='w-40 bg-white overflow-auto d-flex flex-column align-items-center'\n        style={{ height: '600px' }}\n      >\n        {activeProject && activeProject.streetviewHead && (\n          <div className='mb-3 w-100'>\n            <div\n              style={{\n                width: '100%',\n                height: '300px',\n                backgroundColor: '#eeeeee'\n              }}\n            >\n              <ReactStreetview\n                apiKey={googleMapsApiKey}\n                streetViewPanoramaOptions={streetviewOptions}\n                onPositionChanged={() => console.log('onPositionChanged')}\n              />\n            </div>\n          </div>\n        )}\n        <div className='m-3 text-left w-80 project-page-special-title'>\n          {projects && projects[selectedIndex]\n            ? projects[selectedIndex].name\n            : ''}\n        </div>\n        <div className='m-3 text-left w-80'>\n          {projects && projects[selectedIndex]\n            ? projects[selectedIndex].stringCoordinates\n            : ''}\n        </div>\n        <div className='project-page-section-title text-left w-80'>\n          PICTURES TAKEN\n        </div>\n        {projects &&\n          projects[selectedIndex] &&\n          projects[selectedIndex].images.map((image, index) => {\n            return <img key={index} className='my-1 w-80' src={`${image}`} />;\n          })}\n      </div>\n\n      <div className='w-60'>\n        <Map\n          ref={m => (map = m)}\n          style='mapbox://styles/gabrielecolombo/cjsnc1pt701yf1fmoasvam9wv'\n          containerStyle={{\n            height: '600px',\n            width: '100%'\n          }}\n          onZoomEnd={z => {\n            const zoom = map.state.map.getZoom();\n            mapZoom = zoom;\n          }}\n          zoom={[mapZoom]}\n          center={[\n            projects && projects[selectedIndex]\n              ? projects[selectedIndex].coordinates.lng\n              : -0.2416815,\n            projects && projects[selectedIndex]\n              ? projects[selectedIndex].coordinates.lat\n              : 51.5285582\n          ]}\n        >\n          {projects.map((project, index) => {\n            return (\n              <Layer type='circle' paint={getCirclePaint(project, index)}>\n                <Feature\n                  coordinates={[\n                    project.coordinates.lng,\n                    project.coordinates.lat\n                  ]}\n                  onClick={() => setSelectedIndex(index)}\n                />\n              </Layer>\n            );\n          })}\n        </Map>\n      </div>\n    </div>\n  );\n};\n\nexport default SpecialProject;\n","import React, { useState } from 'react';\nimport Slider from 'react-slick';\nimport { withGetScreen } from 'react-getscreen';\nimport Loader from './Loader';\n\nconst Carousel = ({ images, isTablet, isMobile }) => {\n  const [activeSlide, setActiveSlide] = useState(0);\n\n  const settings = {\n    dots: false,\n    infinite: true,\n    centerMode: true,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    adaptiveHeight: true,\n    variableWidth: true,\n    arrows: false,\n    afterChange: current => setActiveSlide(current)\n  };\n\n  let slider = null;\n  console.log(isMobile());\n  const height = isMobile() ? 300 : 600;\n\n  return (\n    <div className='carousel'>\n      <div className={`${isMobile() ? 'slider-half' : 'slider'}`}>\n        <Slider ref={c => (slider = c)} {...settings}>\n          {images.map((image, index) => {\n            return (\n              <div className='' key={index}>\n                <img\n                  src={`${image}?h=${height}`}\n                  key={index}\n                  className='slider-image'\n                />\n              </div>\n            );\n          })}\n        </Slider>\n      </div>\n      <div className={'slider-arrows'}>\n        <img\n          alt='previous image'\n          src='images/arrow-left.svg'\n          width={20}\n          className='cursor-pointer'\n          onClick={() => slider.slickPrev()}\n        />\n        <div>\n          {activeSlide + 1} / {images.length}\n        </div>\n        <img\n          alt='next image'\n          src='images/arrow-right.svg'\n          width={20}\n          className='cursor-pointer'\n          onClick={() => slider.slickNext()}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default withGetScreen(Carousel);\n","import React, { useState, useEffect, useContext } from \"react\";\nimport sanityClient, { builder } from \"../lib/sanity\";\nimport { AppContext } from \"../appContext\";\nimport BlockContent from \"@sanity/block-content-to-react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport Header from \"./Header\";\nimport Loader from \"./Loader\";\nimport ProjectPageSideBar from \"./ProjectPageSideBar\";\nimport Video from \"./Video\";\nimport SpecialProject from \"./SpecialProject\";\nimport Carousel from \"./Carousel\";\n\nconst serializers = {\n  types: {\n    code: props => (\n      <pre data-language={props.node.language}>\n        <code>{props.node.code}</code>\n      </pre>\n    )\n  }\n};\n\nconst urlFor = source => {\n  console.log(builder.image(source));\n  return builder.image(source);\n};\n\nconst ProjectPage = ({ history, location }) => {\n  const [project, setProject] = useState([]);\n  const [modal, toggleModal] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const context = useContext(AppContext);\n\n  const slug = location.pathname.split(\"/\")[2];\n  // Similar to componentDidMount and componentDidUpdate:\n  useEffect(() => {\n    const query = `*[_type == \"project\" && slug.current == \"${slug}\"]{\n      _id, title, body, slug, videoUrl,\n      \"mainImage\": mainImage.asset->url,\n      \"topics\": topics[]->,\n      \"chemicals\": chemicals[]->,\n      \"methods\": methodologies[]->,\n      \"places\": place[]->,\n      \"countries\": place[]->country[]->,\n      \"researchers\": researchers[]->,\n      \"internalResources\": internalResources,\n      \"internalResourcesCategories\": internalResources[].category->,\n      \"internalResourcesFiles\": internalResources[].document.asset->,\n      \"externalResources\": externalResources,\n      \"externalResourcesCategories\": externalResources[].category->,\n      \"images\": images[].asset->url,\n    }`;\n\n    sanityClient\n      .fetch(query)\n      .then(res => {\n        console.log(res);\n        handleStatusChange(res);\n        return () => {\n          // Clean up\n        };\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  }, [slug]);\n\n  const handleStatusChange = res => {\n    setProject(res[0]);\n    setLoading(false);\n  };\n\n  const back = () => {\n    if (history.length > 2) {\n      history.goBack();\n    } else {\n      history.push(`/chemical`);\n    }\n  };\n\n  const changeSection = (type, name) => {\n    context.setSelected({ type: type, value: name });\n    history.push(`/${type}?selected=${name}`);\n  };\n\n  console.log(history);\n\n  return (\n    <div className=\"w-100 d-flex flex-column position-relative justify-content-center\">\n      <Header expanded={false} />\n      <div className=\"w-100 d-flex flex-wrap container\">\n        {loading && <Loader fullheader={false} />}\n        <div className=\"close-icon link\" onClick={back}>\n          <span>\n            <img src=\"/images/arrow-left.svg\" width=\"20px\" />\n          </span>\n          Back to home\n        </div>\n        <div className=\"left-column\">\n          <div className=\"w-100 py-3\">\n            <div className=\"project-page-title\"> {project.title} </div>\n            <div className=\"d-flex flex-wrap\">\n              {project.researchers &&\n                project.researchers.map((researcher, index) => {\n                  return (\n                    <React.Fragment key={index}>\n                      <div\n                        className={`project-page-researcher link py-1 ${\n                          index === 0 ? \"mr-2\" : \"mx-2\"\n                        }`}\n                        onClick={() =>\n                          changeSection(\"researcher\", researcher.name)\n                        }\n                      >\n                        {researcher.name}\n                      </div>\n                      <span>\n                        {index < project.researchers.length - 1 ? \"|\" : \"\"}\n                      </span>\n                    </React.Fragment>\n                  );\n                })}\n            </div>\n            {project.mainImage && (\n              <div className=\"mt-4\">\n                <img src={`${project.mainImage}?w=1000&fit=max`} width=\"100%\" />\n              </div>\n            )}\n            <div className=\"py-4 project-page-body\">\n              {project.body && project.body[0] && (\n                <BlockContent blocks={project.body} serializers={serializers} />\n              )}\n            </div>\n          </div>\n          <div className=\"w-100 mb-5\">\n            {(project.internalResources || project.externalResources) &&\n              (project.internalResources.length > 0 ||\n                project.externalResources.length > 0) && (\n                <div className=\"project-page-section-title-no-padding\">\n                  RESOURCES\n                </div>\n              )}\n            {project.internalResources && (\n              <div className=\"w-100\">\n                {project.internalResources.map((el, index) => {\n                  if (project.internalResourcesFiles[index]) {\n                    return (\n                      <div key={index} className=\"project-page-resource\">\n                        {el.private ? (\n                          <div\n                            onClick={() => toggleModal(true)}\n                            className=\"cursor-pointer\"\n                          >\n                            <span className=\"resource-category\">\n                              {\"[\"}\n                              {project.internalResourcesCategories[index].name}\n                              {\"]\"}\n                            </span>\n                            <BlockContent\n                              blocks={el.name}\n                              serializers={serializers}\n                              className=\"resource-container\"\n                              renderContainerOnSingleChild={true}\n                            />\n                          </div>\n                        ) : (\n                          <a\n                            href={project.internalResourcesFiles[index].url}\n                            download\n                          >\n                            <span className=\"resource-category\">\n                              {\"[\"}\n                              {project.internalResourcesCategories[index].name}\n                              {\"]\"}\n                            </span>\n                            <BlockContent\n                              blocks={el.name}\n                              serializers={serializers}\n                              className=\"resource-container\"\n                              renderContainerOnSingleChild={true}\n                            />\n                          </a>\n                        )}\n                      </div>\n                    );\n                  }\n                })}\n              </div>\n            )}\n            {project.externalResources && (\n              <div className=\"w-100\">\n                {project.externalResources.map((el, index) => {\n                  if (el.linkUrl) {\n                    return (\n                      <div key={index} className=\"project-page-resource\">\n                        <span className=\"resource-category\">\n                          {\"[\"}\n                          {project.externalResourcesCategories[index].name}\n                          {\"]\"}\n                        </span>\n                        <a href={el.linkUrl} target=\"_blank\" download>\n                          <BlockContent\n                            blocks={el.name}\n                            serializers={serializers}\n                            className=\"resource-container\"\n                            renderContainerOnSingleChild={true}\n                          />\n                        </a>\n                      </div>\n                    );\n                  }\n                })}\n              </div>\n            )}\n          </div>\n        </div>\n        <ProjectPageSideBar project={project} />\n        {project.images && (\n          <div className=\"project-page-section-title\">IMAGES</div>\n        )}\n        {project.images && <Carousel images={project.images} />}\n        {project.videoUrl && <Video url={project.videoUrl} />}\n      </div>\n      <Modal isOpen={modal} toggle={() => toggleModal(!modal)} className={\"\"}>\n        <ModalHeader toggle={() => toggleModal(!modal)}>\n          This document is private\n        </ModalHeader>\n        <ModalBody>\n          If you want to read this document, send us a message at{\" \"}\n          <a href=\"mailto:info@info.com\">info@info.com</a>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"secondary\" onClick={() => toggleModal(!modal)}>\n            Close\n          </Button>\n        </ModalFooter>\n      </Modal>\n      {project.slug &&\n        project.slug.current === \"mapping-chemicals-in-cagayan-de-oro\" && (\n          <SpecialProject />\n        )}\n    </div>\n  );\n};\n\nexport default withRouter(ProjectPage);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, HashRouter, Route, Switch } from \"react-router-dom\";\nimport Landing from \"./components/Landing\";\nimport Home from \"./components/Home\";\nimport ProjectPage from \"./components/ProjectPage\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <HashRouter>\n        <div className=\"w-100 h-100\">\n          <Switch>\n            <Route exact path=\"/\" component={Landing} />\n            <Route\n              exact\n              path={\n                \"/:type(chemical|topic|location|researcher|time|method)?/:selection\"\n              }\n              component={Home}\n            />\n            <Route exact path={\"/projects/:slug\"} component={ProjectPage} />\n          </Switch>\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const timeLabels = {\n  0: '3 months',\n  3: '6 months',\n  6: '1 year',\n  12: '2 years',\n  24: '3 years',\n  36: 'more than 3 years'\n};\n\nexport const quantizeTime = time => {\n  if (time < 3) {\n    return 0;\n  } else if (time >= 3 && time < 6) {\n    return 3;\n  } else if (time >= 6 && time < 12) {\n    return 6;\n  } else if (time >= 12 && time < 24) {\n    return 12;\n  } else if (time >= 24 && time < 36) {\n    return 24;\n  } else if (time >= 36) {\n    return 36;\n  }\n};\n","import React from 'react';\n\nexport const AppContext = React.createContext({\n  section: '',\n  setSection: () => {},\n  selectedChemical: '',\n  setSelectedChemical: () => {},\n  selectedLocation: '',\n  setSelectedLocation: () => {},\n  selectedTopic: '',\n  setSelectedTopic: () => {},\n  selected: [],\n  setSelected: () => {},\n  toggleSelected: () => {}\n});\n"],"sourceRoot":""}