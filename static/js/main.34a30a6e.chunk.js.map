{"version":3,"sources":["lib/sanity.js","utils.js","components/Loader.js","components/Landing.js","components/Header.js","components/Search.js","components/Chemicals.js","components/Topics.js","components/Researchers.js","components/Location.js","components/Locations.js","components/Methodologies.js","components/Times.js","components/Home.js","components/List.js","components/ProjectPageSideBar.js","components/Video.js","components/SpecialProject.js","components/Carousel.js","components/ProjectPage.js","serviceWorker.js","index.js","timeUtils.js","appContext.js"],"names":["__webpack_require__","d","__webpack_exports__","builder","_sanity_client__WEBPACK_IMPORTED_MODULE_0__","_sanity_client__WEBPACK_IMPORTED_MODULE_0___default","n","_sanity_image_url__WEBPACK_IMPORTED_MODULE_1__","imageUrlBuilder","sanityClient","projectId","dataset","useCdn","parseQueryParams","selection","map","v","i","concat","value","join","reactstrap__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","Loader","_ref","_ref$fullheader","fullheader","a","createElement","className","style","position","top","bottom","left","right","zIndex","type","color","withRouter","history","react_default","src","width","marginRight","marginLeft","onClick","push","height","_ref$expanded","expanded","context","useContext","AppContext","useEffect","pathname","location","split","setSection","changeSection","section","selected","Search","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","matchStateToTerm","elem","length","objectKey","console","log","toLowerCase","indexOf","name","state","_this2","_this$props","items","selectionCallBack","Autocomplete_default","getItemValue","item","inputProps","placeholder","wrapperStyle","menuStyle","backgroundColor","maxHeight","overflow","open","renderItem","isHighlighted","key","_id","padding","borderBottom","cursor","opacity","some","e","shouldItemRender","onChange","event","setState","onSelect","val","isItemSelectable","Component","contextType","svgWidth","window","innerWidth","svgHeight","innerHeight","radiusScale","scaleLinear","range","Chemicals","setUpForceLayout","res","_extent","extent","relatedProjects","_extent2","slicedToArray","max","domain","simulationNodes","filter","r","sort","b","radius","source","target","slice","forceSimulation","force","forceManyBody","strength","forceCenter","forceCollide","iterations","on","forEach","x","y","nodes","selectChemical","toggleSelected","queryParams","chemicals","activeState","fetch","then","catch","err","error","_this3","_this$state","activeIndex","s","dist_default","place","theme","effect","components_Search","node","index","data-tip","toUpperCase","ref","cx","cy","stroke","strokeWidth","onMouseEnter","ReactTooltip","show","findDOMNode","refs","onMouseLeave","hide","dx","dy","textAnchor","wrappedClass","WrappedComponent","_useState","useState","_useState2","topics","setTopics","_useState3","_useState4","loading","setLoading","_useState5","_useState6","setActiveIndex","handleStatusChange","selectTopic","wordScale","topic","fontSize","Researchers","researchersNodes","researchersLinks","researchersLinksGrouped","values","groupBy","formattedLinks","findIndex","weight","links","forceLink","distance","forceRadial","selectResearcher","researchers","researchersCount","flatten","reduce","prev","cur","entries","projects","researcher1","remainingResearchers","splice","j","sortedResearchers","link","x1","y1","x2","y2","Location","coordinates","zoom","country","city","callbackClick","backgroundImage","lng","lat","offsets","ScrollToHOC","scrollTo","locations","setLocations","getYOffset","selectLocation","id","rowHeight","Math","floor","react_scroll_to","components_Location","methodologies","setMethodologies","selectMethod","heightScale","methodology","times","setTimes","setDerivedTimes","derivedTimes","time","diff","d1","d2","months","getFullYear","getMonth","monthDiff","Date","startDate","endDate","quantizeTime","sortedTimes","groupedByTimes","el","reverse","widthScale","scaleOrdinal","duration","borderTop","selectTime","timeLabels","Projects","React","lazy","bind","Home","setSelectedLocation","selectedLocation","setSelectedTopic","selectedTopic","setSelectedChemical","chemical","selectedChemical","setSelected","selectedArray","find","parsed","queryString","parse","search","Array","isArray","p","appContext","Provider","Suspense","fallback","components_Header","components_Chemicals","components_Topics","components_Locations","components_Researchers","components_Times","components_Methodologies","elements","Fragment","ProjectPageSideBar","project","paddingLeft","List","places","methods","Video","videoId","url","title","frameBorder","allowFullScreen","SpecialProject","objectDestructuringEmpty","setProjects","bounds","setBounds","_useState7","_useState8","selectedIndex","setSelectedIndex","_useState9","_useState10","Map","ReactMapboxGl","accessToken","images","line","lineString","bbox","getCirclePaint","circle-radius","circle-color","circle-stroke-color","circle-stroke-width","circle-opacity","ReactStreetview_default","apiKey","streetViewPanoramaOptions","pov","heading","pitch","motionTracking","motionTrackingControl","linksControl","panControl","zoomControl","addressControl","fullscreenControl","enableCloseButton","disableDefaultUI","showRoadLabels","clickToGo","scrollwheel","stringCoordinates","image","m","containerStyle","onZoomEnd","z","fitBounds","center","lib_esm","paint","Carousel","activeSlide","setActiveSlide","settings","dots","infinite","centerMode","slidesToShow","slidesToScroll","adaptiveHeight","variableWidth","arrows","afterChange","current","slider","lib_default","assign","c","alt","slickPrev","slickNext","serializers","types","code","data-language","language","setProject","modal","toggleModal","slug","query","goBack","researcher","mainImage","body","BlockContent_default","blocks","internalResources","externalResources","internalResourcesFiles","private","internalResourcesCategories","renderContainerOnSingleChild","href","download","linkUrl","externalResourcesCategories","components_ProjectPageSideBar","components_Carousel","videoUrl","components_Video","Modal","isOpen","toggle","ModalHeader","ModalBody","ModalFooter","Button","components_SpecialProject","Boolean","hostname","match","App","BrowserRouter","Switch","Route","exact","path","component","Landing","ProjectPage","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","0","3","6","12","24","36","react__WEBPACK_IMPORTED_MODULE_0__","createContext"],"mappings":"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","file":"static/js/main.34a30a6e.chunk.js","sourcesContent":["import sanityClient from '@sanity/client';\nimport imageUrlBuilder from '@sanity/image-url';\n\nexport const builder = imageUrlBuilder(sanityClient);\n\nexport default sanityClient({\n  projectId: 'i89zv88h',\n  dataset: 'projects',\n  useCdn: true\n  // useCdn == true gives fast, cheap responses using a globally distributed cache.\n  // Set this to false if your application require the freshest possible\n  // data always (potentially slightly slower and a bit more expensive).\n});\n","export const parseQueryParams = selection => {\n  return selection\n    .map((v, i) => {\n      return i === 0 ? `?selected=${v.value}` : `&selected=${v.value}`;\n    })\n    .join('');\n};\n","import { Spinner } from 'reactstrap';\nimport React from 'react';\n\nconst Loader = ({ fullheader = true }) => {\n  return (\n    <div className='d-flex justify-content-center align-items-center bg-white' style={{ position: 'absolute', top: fullheader ? '80px' : '40px', bottom: 0, left: 0, right: 0, zIndex: 999}}>\n      <Spinner type=\"grow\" color=\"dark\" />\n    </div>\n  );\n};\n\nexport default Loader;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nconst Landing = ({ history }) => {\n  const goToHome = () => {\n    history.push(`/chemical`);\n  };\n\n  return (\n    <div className='landing-container'>\n      <div className='landing-upper-container'>\n        <div className='landing-upper-content'>\n          <div className='landing-logo-container'>\n            <img src='images/logo-white.svg' width='350px' />\n          </div>\n          <div className='landing-text-container'>\n            <div className='w-100 landing-text-container-upper'>\n              The everyday lives of contemporary youth are awash with chemicals\n              to boost pleasure, moods, sexual performance, appearance and\n              health. What do pills, drinks, sprays, powders and lotions do for\n              youth? What effects are they seeking? How can we understand the\n              ways chemicals affect young bodies and minds? <br />\n              <br />\n              Instead of focusing on illegal drug use with the purpose of\n              controlling it, we study the pervasive use of chemicals in\n              everyday life – ethnographically, from the perspective of youth\n              themselves.\n            </div>\n            <div\n              className='landing-text-container-lower'\n              style={{ marginRight: '2%' }}\n            >\n              We draw on medical anthropology and studies of science, technology\n              and contemporary youth culture to research the lived effects of\n              chemicals. By ‘lived effects’, we mean the combination of\n              chemicals’ pharmaceutical properties, beliefs and expectations\n              surrounding their use, and users’ experimentation with various\n              techniques. Our ethnographic fieldwork, based on participant\n              observation and long-term immersion in the field, takes place in\n              the Netherlands, France, Indonesia and the Philippines.\n            </div>\n            <div\n              className='landing-text-container-lower'\n              style={{ marginLeft: '2%' }}\n            >\n              This website is dynamic, experimental and rich, like the methods\n              used and insights produced during our innovative, tentacular\n              project.\n              <br />\n              <br />\n              The first phase of ChemicalYouth has ended, but our work continues\n              and this website will keep growing. We have many publications in\n              the oven, and numerous small and big projects are still in the\n              works. It is likely that you will find something new every time\n              you visit us.\n            </div>\n          </div>\n          <div className='landing-link link' onClick={() => goToHome()}>\n            EXPLORE THE PROJECT\n            <span>\n              <img src='images/arrow-right.svg' width='20px' />\n            </span>\n          </div>\n        </div>\n      </div>\n      <div className='landing-lower'>\n        <div className='landing-lower-container'>\n          <div className='landing-lower-text'>\n            The ChemicalYouth project is based at the University of Amsterdam\n            and received 5 years of funding from the European Research Council\n            (2013-2018).\n          </div>\n          <div>\n            <img src='images/aissr_logoblokjesite_GRAY.png' height='80px' />\n          </div>\n          <div>\n            <img src='images/uvalogo_tag_p.png' height='80px' />\n          </div>\n          <div>\n            <img src='images/LOGO_ERC.png' height='80px' />\n          </div>\n          <div className='landing-lower-text'>\n            This website is designed and developed by Calibro. Project team:\n            Lorem ipsum, dolor sit amet, other sui, lorem dolor, ather examples.\n          </div>\n          <div>\n            <img src='images/LOGO_ERC.png' height='80px' />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(Landing);\n","import React, { useContext, useEffect } from \"react\";\nimport { AppContext } from \"../appContext\";\nimport { withRouter } from \"react-router-dom\";\n\nconst Header = ({ history, expanded = true }) => {\n  const context = useContext(AppContext);\n  useEffect(() => {\n    const pathname = history.location.pathname.split(\"/\");\n    context.setSection(pathname[1]);\n  }, [history.location.pathname]);\n\n  const changeSection = section => {\n    context.setSection(section);\n    context.selected = [];\n    history.push(`/${section}`);\n  };\n\n  const goToLanding = () => {\n    history.push(`/`);\n  };\n\n  return (\n    <div className={`header ${expanded ? \"\" : \"small\"}`}>\n      <div className=\"w-100 header-background\" />\n      {expanded && (\n        <div className=\"header-content w-70 d-flex align-items-center justify-content-around\">\n          <div>\n            <div className={`cursor-pointer`} onClick={() => goToLanding()}>\n              <img src=\"/images/logo-white.svg\" width={60} />\n            </div>\n          </div>\n          <div>\n            <div className={`header-el-not-link`}>View by:</div>\n          </div>\n          <div onClick={() => changeSection(\"chemical\")}>\n            <div\n              className={`header-el ${\n                context.section === \"chemical\" ? \"underline\" : \"none\"\n              }`}\n            >\n              CHEMICAL\n            </div>\n          </div>\n          <div onClick={() => changeSection(\"topic\")}>\n            <div\n              className={`header-el ${\n                context.section === \"topic\" ? \"underline\" : \"none\"\n              }`}\n            >\n              TOPIC\n            </div>\n          </div>\n          <div onClick={() => changeSection(\"location\")}>\n            <div\n              className={`header-el ${\n                context.section === \"location\" ? \"underline\" : \"none\"\n              }`}\n            >\n              LOCATION\n            </div>\n          </div>\n          <div onClick={() => changeSection(\"researcher\")}>\n            <div\n              className={`header-el ${\n                context.section === \"researcher\" ? \"underline\" : \"none\"\n              }`}\n            >\n              RESEARCHER\n            </div>\n          </div>\n          <div onClick={() => changeSection(\"time\")}>\n            <div\n              className={`header-el ${\n                context.section === \"time\" ? \"underline\" : \"none\"\n              }`}\n            >\n              TIME\n            </div>\n          </div>\n          <div onClick={() => changeSection(\"method\")}>\n            <div\n              className={`header-el ${\n                context.section === \"method\" ? \"underline\" : \"none\"\n              }`}\n            >\n              METHOD\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default withRouter(Header);\n","import React, { Component } from 'react';\nimport Autocomplete from 'react-autocomplete';\nimport { AppContext } from '../appContext';\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: ''\n    };\n  }\n\n  matchStateToTerm = (elem, value) => {\n    if (value.length > 0) {\n      if (this.props.objectKey) {\n        console.log(\n          elem[this.props.objectKey]\n            .toLowerCase()\n            .indexOf(value.toLowerCase()) !== -1\n        );\n        return (\n          elem[this.props.objectKey]\n            .toLowerCase()\n            .indexOf(value.toLowerCase()) !== -1\n        );\n      } else {\n        return elem.name.toLowerCase().indexOf(value.toLowerCase()) !== -1;\n      }\n    }\n  };\n\n  render() {\n    const { items, type, selectionCallBack, objectKey } = this.props;\n    const { value } = this.state;\n\n    return (\n      <div className='autocomplete-container'>\n        <img\n          src='images/magnify.svg'\n          width={20}\n          className='autocomplete-icon'\n        />\n        <Autocomplete\n          getItemValue={item => (objectKey ? item[objectKey] : item.name)}\n          items={items}\n          inputProps={{\n            className: 'autocomplete-input',\n            placeholder: `Search ${type}`\n          }}\n          wrapperStyle={{\n            position: 'relative'\n          }}\n          menuStyle={{\n            backgroundColor: 'white',\n            position: 'absolute',\n            zIndex: 999,\n            top: 33,\n            left: 0,\n            maxHeight: '500px',\n            overflow: 'auto'\n          }}\n          open={true}\n          renderItem={(item, isHighlighted) => (\n            <div\n              key={item._id}\n              style={{\n                padding: '10px',\n                borderBottom: '1px solid #d7d7d7',\n                cursor: 'pointer',\n                opacity: this.context.selected.some(e => e.value === item.name)\n                  ? 0.5\n                  : 1\n              }}\n              className={`hover-el`}\n            >\n              {objectKey ? item[objectKey] : item.name}\n            </div>\n          )}\n          value={value}\n          shouldItemRender={this.matchStateToTerm}\n          onChange={(event, value) => this.setState({ value: value })}\n          onSelect={val => {\n            selectionCallBack(type, val);\n            this.setState({ value: '' });\n          }}\n          isItemSelectable={item => {\n            console.log(this.context.selected.some(e => e.value === item.name));\n            return !this.context.selected.some(e => e.value === item.name);\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nSearch.contextType = AppContext;\n\nexport default Search;\n","import React, { Component } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport { withRouter } from 'react-router-dom';\nimport sanityClient from '../lib/sanity';\nimport circlePack from '../lib/circlePack';\nimport {\n  forceSimulation,\n  forceManyBody,\n  forceCenter,\n  forceCollide\n} from 'd3-force';\nimport { scaleLinear } from 'd3-scale';\nimport { extent } from 'd3-array';\nimport ReactTooltip from 'react-tooltip';\nimport { AppContext } from '../appContext';\nimport Search from './Search';\nimport { parseQueryParams } from '../utils';\n\nconst query = `*[_type==\"chemical\"]{\n  name,\n  \"relatedProjects\": count(*[_type=='project' && references(^._id)])\n}`;\n\nconst svgWidth = window.innerWidth / 2 - 60;\nconst svgHeight = window.innerHeight - 140;\n\nconst radiusScale = scaleLinear().range([0, 50]);\n// const Chemicals = ({ type }) => {\n//   const [chemicals, setChemicals] = useState([]);\n//   const [nodes, setNodes] = useState([]);\n//   const [simulation, setSimulation] = useState(null);\n\n//   // Similar to componentDidMount and componentDidUpdate:\n//   useEffect(() => {\n//     sanityClient\n//       .fetch(query)\n//       .then(res => {\n//         //setUpForceLayout(res);\n//         setChemicals(res);\n//         return () => {\n//           // Clean up\n//         };\n//       })\n//       .catch(err => {\n//         console.error(err);\n//       });\n//   }, [type]);\n\n// useEffect(() => {\n//   const simulationNodes = nodes\n//     .filter(r => r.relatedProjects > 0)\n//     .sort((a, b) => {\n//       return b.relatedProjects - a.relatedProjects;\n//     })\n//     .map(r => {\n//       r.radius = radiusScale(r.relatedProjects);\n//       return r;\n//     });\n\n//   console.log(simulationNodes);\n\n//   const links = simulationNodes\n//     .map((n, i) => {\n//       if (i < simulationNodes.length - 1) {\n//         return {\n//           source: i,\n//           target: i + 1\n//         };\n//       }\n//     })\n//     .slice(0, simulationNodes.length - 1);\n//   console.log(links);\n//   const simulation = forceSimulation(simulationNodes)\n//     .force('charge', forceManyBody().strength(50))\n//     //.force('link', forceLink(links))\n//     .force('center', forceCenter(svgWidth / 2, svgHeight / 2))\n//     .force(\n//       'collision',\n//       forceCollide()\n//         .radius(30)\n//         .strength(2)\n//         .iterations(2)\n//     )\n//     .on('tick', a => {\n//       console.log('here');\n//       setNodes(simulationNodes);\n//       //setNodes(nodes);\n//     });\n//   setSimulation(simulation);\n// });\n\n//   return (\n//     <div className='w-100 h-100 d-flex flex-column'>\n//       <div className='w-100 d-flex p-3' />\n//       <div className='w-100 h-100 d-flex flex-column'>\n//         <svg width={svgWidth} height={svgHeight}>\n//           <defs>\n//             <filter x='0' y='0' width='1' height='1' id='solid'>\n//               <feFlood floodColor='white' />\n//               <feComposite in='SourceGraphic' />\n//             </filter>\n//           </defs>\n//           {nodes.map((node, index) => {\n//             if (node.relatedProjects > 0) {\n//               return (\n//                 <g key={index}>\n//                   <circle\n//                     cx={node.x}\n//                     cy={node.y}\n//                     fill='white'\n//                     stroke='black'\n//                     strokeWidth={2}\n//                     r={30}\n//                   />\n//                   {/* <text\n//                     dx={node.x}\n//                     dy={node.y}\n//                     style={{\n//                       fontSize: '10px',\n//                       textTransform: 'uppercase',\n//                       dominantBaseline: 'central'\n//                     }}\n//                     fill={'black'}\n//                     textAnchor='middle'\n//                     filter='url(#solid)'\n//                   >\n//                     {node.name}\n//                   </text> */}\n//                 </g>\n//               );\n//             }\n//           })}\n//         </svg>\n//       </div>\n//     </div>\n//   );\n// };\n//export default Chemicals;\n\nclass Chemicals extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chemicals: [],\n      nodes: [],\n      activeState: null\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.chemicals.length === 0) {\n      sanityClient\n        .fetch(query)\n        .then(res => {\n          //setUpForceLayout(res);\n          this.setState({ chemicals: res });\n          this.setUpForceLayout(res);\n        })\n        .catch(err => {\n          console.error(err);\n        });\n    }\n  }\n\n  setUpForceLayout = res => {\n    const [min, max] = extent(res, d => d.relatedProjects);\n    radiusScale.domain([0, max]);\n\n    const simulationNodes = res\n      .filter(r => r.relatedProjects > 0)\n      .sort((a, b) => {\n        return b.relatedProjects - a.relatedProjects;\n      })\n      .map(r => {\n        r.radius = radiusScale(r.relatedProjects);\n        return r;\n      });\n\n    const links = simulationNodes\n      .map((n, i) => {\n        if (i < simulationNodes.length - 1) {\n          return {\n            source: i,\n            target: i + 1\n          };\n        }\n      })\n      .slice(0, simulationNodes.length - 1);\n\n    const simulation = forceSimulation(simulationNodes)\n      .force('charge', forceManyBody().strength(5))\n      //.force('link', forceLink(links))\n      .force('center', forceCenter(svgWidth / 2, svgHeight / 2))\n      .force(\n        'collision',\n        forceCollide()\n          .radius(n => n.radius + 10)\n          .strength(1)\n          .iterations(2)\n      )\n      .on('tick', a => {\n        simulationNodes.forEach(function(d) {\n          d.x =\n            d.x < radiusScale(d.relatedProjects)\n              ? radiusScale(d.relatedProjects)\n              : d.x > svgWidth - radiusScale(d.relatedProjects)\n              ? svgWidth - radiusScale(d.relatedProjects)\n              : d.x;\n\n          d.y =\n            d.y < radiusScale(d.relatedProjects)\n              ? radiusScale(d.relatedProjects)\n              : d.y > svgHeight - radiusScale(d.relatedProjects)\n              ? svgHeight - radiusScale(d.relatedProjects)\n              : d.y;\n        });\n        this.setState({ nodes: simulationNodes });\n      })\n      .on('end', a => {\n        //this.setState({ nodes: simulationNodes });\n      });\n  };\n\n  selectChemical = (type, value) => {\n    this.context.toggleSelected({ type: type, value: value });\n    const queryParams = parseQueryParams(this.context.selected);\n    this.props.history.push(`/${this.context.section}${queryParams}`);\n  };\n\n  render() {\n    const { nodes, chemicals, activeIndex } = this.state;\n    const selected = this.context.selected\n      ? this.context.selected.map(s => s.value)\n      : [];\n    return (\n      <div className='viz-container'>\n        <ReactTooltip\n          place='top'\n          theme='dark'\n          effect='solid'\n          className='tooltip-extra-class'\n        />\n        <Search\n          items={chemicals}\n          selectionCallBack={this.selectChemical}\n          type={'chemical'}\n        />\n        <div className='w-100 h-100 d-flex flex-column'>\n          <svg width={svgWidth} height={svgHeight}>\n            {nodes.map((node, index) => {\n              const radius = radiusScale(node.relatedProjects);\n              if (node.relatedProjects > 0) {\n                return (\n                  <g key={index}>\n                    <circle\n                      data-tip={\n                        radiusScale(node.relatedProjects) <= 10\n                          ? node.name.toUpperCase()\n                          : ''\n                      }\n                      ref={node.name}\n                      cx={node.x}\n                      cy={node.y}\n                      className={`circle ${\n                        selected.indexOf(node.name) > -1 ||\n                        activeIndex === index\n                          ? 'active'\n                          : ''\n                      }`}\n                      stroke='black'\n                      strokeWidth={1}\n                      r={radiusScale(node.relatedProjects)}\n                      onClick={() => this.selectChemical('chemical', node.name)}\n                      onMouseEnter={() => {\n                        this.setState({ activeIndex: index });\n                        ReactTooltip.show(findDOMNode(this.refs[node.name]));\n                      }}\n                      onMouseLeave={() => {\n                        this.setState({ activeIndex: null });\n                        ReactTooltip.hide(findDOMNode(this.refs[node.name]));\n                      }}\n                      style={{ cursor: 'pointer' }}\n                    />\n\n                    {radiusScale(node.relatedProjects) > 10 && (\n                      <g>\n                        <rect\n                          x={node.x - (node.name.length * 5.2) / 2}\n                          y={node.y - 5}\n                          width={node.name.length * 5.2}\n                          height={10}\n                          className={`rect ${\n                            selected.indexOf(node.name) > -1 ||\n                            activeIndex === index\n                              ? 'active'\n                              : ''\n                          }`}\n                        />\n                        <text\n                          dx={node.x}\n                          dy={node.y}\n                          className={`text ${\n                            selected.indexOf(node.name) > -1 ||\n                            activeIndex === index\n                              ? 'active'\n                              : ''\n                          }`}\n                          textAnchor='middle'\n                          //filter='url(#solid)'\n                        >\n                          {node.name}\n                        </text>\n                      </g>\n                    )}\n                  </g>\n                );\n              }\n            })}\n          </svg>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst wrappedClass = withRouter(Chemicals);\nwrappedClass.WrappedComponent.contextType = AppContext;\nexport default wrappedClass;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport sanityClient from '../lib/sanity';\nimport { scaleLinear } from 'd3-scale';\nimport { extent } from 'd3-array';\nimport { AppContext } from '../appContext';\nimport Search from './Search';\nimport { parseQueryParams } from '../utils';\nimport Loader from './Loader';\n\nconst query = `*[_type==\"topic\"]{\n  _id, name,\n  \"relatedProjects\": count(*[_type=='project' && references(^._id)])\n}`;\n\nconst Topics = ({ type, history }) => {\n  const [topics, setTopics] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [activeIndex, setActiveIndex] = useState(null);\n  const context = useContext(AppContext);\n\n  useEffect(() => {\n    if (topics.length === 0) {\n      sanityClient\n        .fetch(query)\n        .then(res => {\n          handleStatusChange(res);\n          return () => {\n            // Clean up\n          };\n        })\n        .catch(err => {\n          console.error(err);\n        });\n    }\n  }, [type]);\n\n  function handleStatusChange(res) {\n    setTopics(res);\n    setLoading(false);\n  }\n\n  const selectTopic = (type, value) => {\n    context.toggleSelected({ type: type, value: value });\n    const queryParams = parseQueryParams(context.selected);\n    history.push(`/${context.section}${queryParams}`);\n  };\n\n  const selected = context.selected ? context.selected.map(s => s.value) : [];\n\n  const [min, max] = extent(topics, d => d.relatedProjects);\n  const wordScale = scaleLinear()\n    .range([10, 36])\n    .domain([0, max]);\n\n  return (\n    <div className='viz-container'>\n      {loading && <Loader />}\n      <Search items={topics} selectionCallBack={selectTopic} type={'topic'} />\n      <div className='w-100 h-100 d-flex flex-wrap align-items-baseline mt-3 overflow-auto'>\n        {topics\n          .sort((a, b) => {\n            return b.relatedProjects - a.relatedProjects;\n          })\n          .map((topic, index) => {\n            return (\n              <div\n                className={`position-relative mr-3`}\n                key={index}\n                style={{\n                  height: '45px'\n                }}\n                onClick={() => selectTopic('topic', topic.name)}\n                onMouseEnter={() => setActiveIndex(index)}\n                onMouseLeave={() => setActiveIndex(null)}\n              >\n                <div\n                  className='cursor-pointer'\n                  style={{\n                    fontSize: wordScale\n                      ? wordScale(topic.relatedProjects)\n                      : '10px',\n                    bottom: '3px'\n                  }}\n                >\n                  {topic.name} <sup>{topic.relatedProjects}</sup>\n                </div>\n                <div\n                  className={`topic-block-line ${\n                    selected.indexOf(topic.name) > -1 || activeIndex === index\n                      ? 'active'\n                      : ''\n                  }`}\n                />\n              </div>\n            );\n          })}\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(Topics);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { findDOMNode } from 'react-dom';\nimport sanityClient from '../lib/sanity';\nimport {\n  forceSimulation,\n  forceManyBody,\n  forceCenter,\n  forceCollide,\n  forceLink,\n  forceRadial\n} from 'd3-force';\nimport { scaleLinear } from 'd3-scale';\nimport { extent } from 'd3-array';\nimport { flatten, groupBy } from 'lodash';\nimport ReactTooltip from 'react-tooltip';\nimport { AppContext } from '../appContext';\nimport Search from './Search';\nimport { parseQueryParams } from '../utils';\n\nconst query = `*[_type == \"project\"]{\n  \"researchers\": researchers[]->\n}`;\n\nconst svgWidth = window.innerWidth / 2 - 60;\nconst svgHeight = window.innerHeight - 140;\n\nconst radiusScale = scaleLinear().range([0, 60]);\n\nclass Researchers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      researchers: [],\n      nodes: [],\n      links: [],\n      activeIndex: null\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.researchers.length === 0) {\n      sanityClient\n        .fetch(query)\n        .then(res => {\n          //setUpForceLayout(res);\n          const researchersOccurency = flatten(\n            res.map(r => r.researchers.map(v => v.name))\n          );\n          const researchersCount = researchersOccurency.reduce((prev, cur) => {\n            prev[cur] = (prev[cur] || 0) + 1;\n            return prev;\n          }, {});\n          const nodes = Object.entries(researchersCount).map(v => {\n            return { name: v[0], value: v[1] };\n          });\n\n          const projects = res.map(r => r.researchers.map(v => v.name));\n\n          let links = [];\n\n          projects.map((researchers, index) => {\n            const length = researchers.length;\n            for (let i = 0; i < length; i++) {\n              const researcher1 = researchers[0];\n              const remainingResearchers = researchers;\n              remainingResearchers.splice(0, 1);\n\n              if (remainingResearchers.length > 0) {\n                for (let j = 0; j < remainingResearchers.length; j++) {\n                  const researcher2 = remainingResearchers[j];\n                  const sortedResearchers = [researcher1, researcher2].sort();\n\n                  links.push(sortedResearchers);\n                  //console.log(researcher1, researcher2);\n                  // if (!links[researcher1]) {\n                  //   links[researcher1] = {};\n                  //   links[researcher1][researcher2] = { count: 1 };\n                  // } else if (!links[researcher1][researcher2]) {\n                  //   links[researcher1][researcher2] = { count: 1 };\n                  // } else {\n                  //   links[researcher1][researcher2].count += 1;\n                  // }\n                }\n              }\n            }\n          });\n\n          console.log(links);\n\n          this.setState({ researchers: nodes });\n          this.setUpForceLayout(nodes, links);\n        })\n        .catch(err => {\n          console.error(err);\n        });\n    }\n  }\n\n  setUpForceLayout = (researchersNodes, researchersLinks) => {\n    const [min, max] = extent(researchersNodes, d => d.value);\n    radiusScale.domain([0, max]);\n\n    const simulationNodes = researchersNodes\n      .filter(r => r.value > 0)\n      .map(r => {\n        r.radius = radiusScale(r.value);\n        return r;\n      });\n\n    const researchersLinksGrouped = Object.values(groupBy(researchersLinks));\n    const formattedLinks = [];\n\n    researchersLinksGrouped.map((value, i) => {\n      const source = researchersNodes.findIndex(v => v.name === value[0][0]);\n      const target = researchersNodes.findIndex(v => v.name === value[0][1]);\n      const weight = value.length;\n\n      formattedLinks.push({ source: source, target: target, weight: weight });\n    });\n\n    this.setState({ links: formattedLinks });\n\n    const simulation = forceSimulation(simulationNodes)\n      .force('charge', forceManyBody().strength(-10))\n      .force(\n        'link',\n        forceLink(formattedLinks)\n          .strength(d => {\n            return d.weight;\n          })\n          .distance(d => {\n            return d.weight * 3;\n          })\n      )\n      .force('r', forceRadial(120))\n      .force('center', forceCenter(svgWidth / 2, svgHeight / 2))\n      .force(\n        'collision',\n        forceCollide()\n          .radius(n => n.radius + 15)\n          .strength(1)\n          .iterations(5)\n      )\n      .on('tick', a => {\n        simulationNodes.forEach(function(d) {\n          d.x =\n            d.x < radiusScale(d.value)\n              ? radiusScale(d.value) + 5\n              : d.x > svgWidth - radiusScale(d.value)\n              ? svgWidth - radiusScale(d.value) - 5\n              : d.x;\n          d.y =\n            d.y < radiusScale(d.value)\n              ? radiusScale(d.value) + 5\n              : d.y > svgHeight - radiusScale(d.value)\n              ? svgHeight - radiusScale(d.value) - 5\n              : d.y;\n        });\n        this.setState({ nodes: simulationNodes });\n      });\n  };\n\n  selectResearcher = (type, value) => {\n    this.context.toggleSelected({ type: type, value: value });\n    const queryParams = parseQueryParams(this.context.selected);\n    this.props.history.push(`/${this.context.section}${queryParams}`);\n  };\n\n  render() {\n    const { nodes, links, researchers, activeIndex } = this.state;\n    const selected = this.context.selected\n      ? this.context.selected.map(s => s.value)\n      : [];\n    return (\n      <div className='viz-container'>\n        <ReactTooltip\n          place='top'\n          theme='dark'\n          effect='solid'\n          className='tooltip-extra-class'\n        />\n        <Search\n          items={researchers}\n          selectionCallBack={this.selectResearcher}\n          type={'researcher'}\n        />\n        <div className='w-100 h-100 d-flex flex-column mt-4'>\n          <svg width={svgWidth} height={svgHeight}>\n            {links.map((link, index) => {\n              return (\n                <g key={index}>\n                  <line\n                    x1={link.source.x}\n                    y1={link.source.y}\n                    x2={link.target.x}\n                    y2={link.target.y}\n                    style={{ strokeWidth: link.weight }}\n                    stroke='black'\n                  />\n                </g>\n              );\n            })}\n            {nodes.map((node, index) => {\n              const radius = radiusScale(node.value);\n              if (node.value > 0) {\n                return (\n                  <g key={index}>\n                    <circle\n                      data-tip={\n                        radiusScale(node.value) <= 10\n                          ? node.name.toUpperCase()\n                          : ''\n                      }\n                      ref={node.name}\n                      cx={node.x}\n                      cy={node.y}\n                      className={`circle ${\n                        selected.indexOf(node.name) > -1 ||\n                        activeIndex === index\n                          ? 'active'\n                          : ''\n                      }`}\n                      stroke='black'\n                      strokeWidth={1}\n                      r={radiusScale(node.value)}\n                      onClick={() =>\n                        this.selectResearcher('researcher', node.name)\n                      }\n                      onMouseEnter={() => {\n                        this.setState({ activeIndex: index });\n                        ReactTooltip.show(findDOMNode(this.refs[node.name]));\n                      }}\n                      onMouseLeave={() => {\n                        this.setState({ activeIndex: null });\n                        ReactTooltip.hide(findDOMNode(this.refs[node.name]));\n                      }}\n                    />\n\n                    {radiusScale(node.value) > 10 && (\n                      <g>\n                        <rect\n                          x={node.x - (node.name.length * 5.2) / 2}\n                          y={node.y - 4}\n                          width={node.name.length * 5.2}\n                          height={10}\n                          className={`rect ${\n                            selected.indexOf(node.name) > -1 ||\n                            activeIndex === index\n                              ? 'active'\n                              : ''\n                          }`}\n                        />\n                        <text\n                          dx={node.x}\n                          dy={node.y}\n                          className={`text ${\n                            selected.indexOf(node.name) > -1 ||\n                            activeIndex === index\n                              ? 'active'\n                              : ''\n                          }`}\n                          textAnchor='middle'\n                          //filter='url(#solid)'\n                        >\n                          {node.name}\n                        </text>\n                      </g>\n                    )}\n                  </g>\n                );\n              }\n            })}\n          </svg>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst wrappedClass = withRouter(Researchers);\nwrappedClass.WrappedComponent.contextType = AppContext;\nexport default wrappedClass;\n","import React from 'react';\n\nconst Location = ({\n  coordinates,\n  zoom,\n  country,\n  city,\n  callbackClick,\n  selected\n}) => {\n  return (\n    <div\n      className={`location-block ${\n        selected.indexOf(city) > -1 ? 'active' : ''\n      }`}\n      style={{\n        backgroundImage: `url(https://api.mapbox.com/styles/v1/gabrielecolombo/cjsnc1pt701yf1fmoasvam9wv/static/${\n          coordinates.lng\n        },${\n          coordinates.lat\n        },${zoom},0,0/600x600?access_token=pk.eyJ1IjoiZ2FicmllbGVjb2xvbWJvIiwiYSI6ImNpdGZqNWY1MjAwZWUyeW1qbDhkZHV2OXMifQ.Nem-UVIW-71T6yQQvjrtog)`\n      }}\n      onClick={() => callbackClick('location', city)}\n    >\n      <div className='location-country'>{country}</div>\n      <div className='location-city'>{city}</div>\n    </div>\n  );\n};\n\nexport default Location;\n","import React, { useState, useEffect, useContext, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport { withRouter } from 'react-router-dom';\nimport sanityClient from '../lib/sanity';\nimport { ScrollToHOC, ScrollArea } from 'react-scroll-to';\nimport Location from './Location';\nimport { AppContext } from '../appContext';\nimport Search from './Search';\nimport Loader from './Loader';\nimport { parseQueryParams } from '../utils';\n\nconst query = `*[_type == \"location\"]{\n  _id, city, coordinates, zoom,\n  country->,\n  \"relatedProjects\": count(*[_type=='project' && references(^._id)])\n}`;\n\nlet offsets = {};\n\nconst Locations = ({ type, history, scrollTo }) => {\n  const [locations, setLocations] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const context = useContext(AppContext);\n  useEffect(() => {\n    if (locations.length === 0) {\n      sanityClient\n        .fetch(query)\n        .then(res => {\n          handleStatusChange(res);\n          return () => {\n            // Clean up\n          };\n        })\n        .catch(err => {\n          console.error(err);\n        });\n    }\n  }, [type]);\n\n  const handleStatusChange = res => {\n    setLocations(res);\n    res\n      .filter(v => v.coordinates.lat)\n      .forEach((v, i) => {\n        offsets[v.city.toLowerCase()] = getYOffset(i);\n      });\n    console.log(offsets);\n    setLoading(false);\n  };\n\n  const selectLocation = (type, value) => {\n    context.toggleSelected({ type: type, value: value });\n    const queryParams = parseQueryParams(context.selected);\n    history.push(`/${context.section}${queryParams}`);\n    console.log(offsets[value]);\n    scrollTo({ id: 'locations', y: offsets[value] });\n  };\n\n  const getYOffset = index => {\n    const rowHeight = (window.innerWidth / 100) * 16;\n    return Math.floor(index / 3) * rowHeight;\n  };\n\n  return (\n    <div className='viz-container'>\n      {loading && <Loader />}\n      <Search\n        items={locations}\n        selectionCallBack={selectLocation}\n        type={'location'}\n        objectKey={'city'}\n      />\n      <ScrollArea id='locations' className='overflow-auto'>\n        <div className='w-100 d-flex flex-wrap mt-4'>\n          {locations.map((location, index) => {\n            if (location.coordinates.lat) {\n              return (\n                <Location\n                  key={index}\n                  coordinates={location.coordinates}\n                  y={() => getYOffset(index)}\n                  zoom={location.zoom}\n                  country={location.country.name}\n                  city={location.city}\n                  callbackClick={selectLocation}\n                  selected={\n                    context.selected ? context.selected.map(s => s.value) : []\n                  }\n                />\n              );\n            }\n          })}\n        </div>\n      </ScrollArea>\n    </div>\n  );\n};\n\nexport default ScrollToHOC(withRouter(Locations));\n","import React, { useState, useEffect, useContext } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport sanityClient from '../lib/sanity';\nimport { scaleLinear } from 'd3-scale';\nimport { extent } from 'd3-array';\nimport { AppContext } from '../appContext';\nimport Search from './Search';\nimport { parseQueryParams } from '../utils';\n\nconst query = `*[_type == \"methodology\"]{\n  _id, name,\n  \"relatedProjects\": count(*[_type=='project' && references(^._id)])\n}`;\n\nconst Methodologies = ({ type, history }) => {\n  const [methodologies, setMethodologies] = useState([]);\n  const context = useContext(AppContext);\n\n  useEffect(() => {\n    if (methodologies.length === 0) {\n      sanityClient\n        .fetch(query)\n        .then(res => {\n          handleStatusChange(res);\n          return () => {\n            // Clean up\n          };\n        })\n        .catch(err => {\n          console.error(err);\n        });\n    }\n  }, [type]);\n\n  const handleStatusChange = res => {\n    setMethodologies(res);\n  };\n\n  const selectMethod = (type, value) => {\n    context.toggleSelected({ type: type, value: value });\n    const queryParams = parseQueryParams(context.selected);\n    history.push(`/${context.section}${queryParams}`);\n  };\n\n  const [min, max] = extent(methodologies, d => d.relatedProjects);\n  const heightScale = scaleLinear()\n    .range([30, 150])\n    .domain([0, max]);\n\n  return (\n    <div className='viz-container'>\n      <Search\n        items={methodologies}\n        selectionCallBack={selectMethod}\n        type={'method'}\n      />\n      <div className='w-100 h-100 overflow-auto'>\n        {methodologies\n          .sort((a, b) => b.relatedProjects - a.relatedProjects)\n          .map((methodology, index) => {\n            const selected = context.selected.map(s => s.value);\n            return (\n              <div\n                className={`px-3 method-block ${\n                  selected.indexOf(methodology.name) > -1 ? 'active' : ''\n                }`}\n                key={index}\n                style={{\n                  height: `${heightScale(methodology.relatedProjects)}px`\n                }}\n                onClick={() => selectMethod('method', methodology.name)}\n              >\n                {methodology.relatedProjects} {methodology.name}\n              </div>\n            );\n          })}\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(Methodologies);\n","import React, { useState, useEffect, useContext } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport sanityClient from '../lib/sanity';\nimport { scaleOrdinal, scaleLinear } from 'd3-scale';\nimport { extent } from 'd3-array';\nimport { groupBy } from 'lodash';\nimport { AppContext } from '../appContext';\nimport { timeLabels, quantizeTime } from '../timeUtils';\nimport { parseQueryParams } from '../utils';\n\nconst query = `*[_type == \"project\"]{\n  endDate, startDate\n}`;\n\nconst monthDiff = (d1, d2) => {\n  var months;\n  months = (d2.getFullYear() - d1.getFullYear()) * 12;\n  months -= d1.getMonth() + 1;\n  months += d2.getMonth();\n  return months <= 0 ? 0 : months;\n};\n\nconst Times = ({ type, history }) => {\n  const [times, setTimes] = useState([]);\n  const [derivedTimes, setDerivedTimes] = useState([]);\n  const context = useContext(AppContext);\n\n  // Similar to componentDidMount and componentDidUpdate:\n  useEffect(() => {\n    if (times.length === 0) {\n      sanityClient\n        .fetch(query)\n        .then(res => {\n          handleStatusChange(res);\n          return () => {\n            // Clean up\n          };\n        })\n        .catch(err => {\n          console.error(err);\n        });\n    }\n  }, [type]);\n\n  const handleStatusChange = res => {\n    const derivedTimes = res.map((time, index) => {\n      const diff = monthDiff(new Date(time.startDate), new Date(time.endDate));\n      time.months = quantizeTime(diff);\n      return time;\n    });\n    setDerivedTimes(derivedTimes);\n\n    const sortedTimes = derivedTimes.sort((a, b) => a.months - b.months);\n    const groupedByTimes = Object.values(groupBy(sortedTimes, el => el.months));\n\n    setTimes(groupedByTimes.reverse());\n  };\n\n  const selectTime = (type, value) => {\n    context.toggleSelected({ type: type, value: value });\n    const queryParams = parseQueryParams(context.selected);\n    history.push(`/${context.section}${queryParams}`);\n  };\n\n  const selected = context.selected.map(s => s.value);\n\n  const [min, max] = extent(times, d => d.length);\n  const heightScale = scaleLinear()\n    .range([30, 200])\n    .domain([0, max]);\n\n  const widthScale = scaleOrdinal()\n    .range([50, 60, 70, 80, 90, 100])\n    .domain([0, 3, 6, 12, 24, 36]);\n\n  return (\n    <div className='viz-container'>\n      {/* <Search items={times} selectionCallBack={selectTime} type={'time'} /> */}\n      <div className='w-100 mt-3 overflow-auto'>\n        {times.map((time, index) => {\n          const duration = time[0].months;\n          return (\n            <div\n              className={`px-3 time-block ${\n                selected.indexOf(duration) > -1 ? 'active' : ''\n              }`}\n              key={index}\n              style={{\n                width: `${widthScale(duration)}%`,\n                height: `${heightScale(time.length)}px`,\n                borderTop: index === 0 ? '1px solid #d7d7d7' : 'none'\n              }}\n              onClick={() => selectTime('time', duration)}\n            >\n              <div>{`${time.length} projects`}</div>\n              <div>{`${timeLabels[duration]}`}</div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(Times);\n","import React, { Component } from 'react';\nimport queryString from 'query-string';\nimport Header from './Header';\nimport { withRouter } from 'react-router-dom';\nimport Chemicals from './Chemicals';\nimport Topics from './Topics';\nimport Researchers from './Researchers';\nimport Locations from './Locations';\nimport Methodologies from './Methodologies';\nimport Times from './Times';\nimport Loader from './Loader';\nimport { AppContext } from '../appContext';\nimport { find, findIndex } from 'lodash';\n\nconst Projects = React.lazy(() => import('./Projects'));\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      section: 'chemical',\n      setSection: this.setSection,\n      selectedChemical: '',\n      setSelectedChemical: this.setSelectedChemical,\n      selectedLocation: '',\n      setSelectedLocation: this.setSelectedLocation,\n      selectedTopic: '',\n      setSelectedTopic: this.setSelectedTopic,\n      selected: [],\n      setSelected: this.setSelected,\n      toggleSelected: this.toggleSelected\n    };\n  }\n\n  setSelectedLocation = location => {\n    this.setState({\n      selectedLocation: location === this.state.selectedLocation ? '' : location\n    });\n  };\n\n  setSelectedTopic = topic => {\n    this.setState({\n      selectedTopic: topic === this.state.selectedTopic ? '' : topic\n    });\n  };\n\n  setSelectedChemical = chemical => {\n    this.setState({\n      selectedChemical: chemical === this.state.selectedChemical ? '' : chemical\n    });\n  };\n\n  setSection = section => {\n    this.setState({\n      section: section\n    });\n  };\n\n  setSelected = selected => {\n    console.log(selected);\n    this.setState({\n      selected: selected\n    });\n  };\n\n  toggleSelected = selected => {\n    const selectedArray = this.state.selected;\n    if (selected.type && selected.value !== null) {\n      if (find(selectedArray, selected)) {\n        const index = findIndex(selectedArray, selected);\n        selectedArray.splice(index, 1);\n      } else {\n        selectedArray.push(selected);\n      }\n      this.setState({\n        selected: selectedArray\n      });\n    }\n  };\n\n  componentDidMount() {\n    const pathname = this.props.location.pathname.split('/');\n    this.setSection(pathname[1]);\n    const parsed = queryString.parse(this.props.location.search);\n    if (parsed.selected && Array.isArray(parsed.selected)) {\n      parsed.selected.forEach(p => {\n        const selected = { type: pathname[1], value: p };\n        this.toggleSelected(selected);\n      });\n    } else if (parsed.selected && !Array.isArray(parsed.selected)) {\n      const selected = { type: pathname[1], value: parsed.selected };\n      this.toggleSelected(selected);\n    }\n  }\n\n  render() {\n    const pathname = this.props.location.pathname.split('/')[1];\n    return (\n      <AppContext.Provider value={this.state}>\n        <React.Suspense fallback={<Loader />}>\n          <div className='w-100 h-100 d-flex flex-column'>\n            <Header />\n            <div\n              className='w-100 d-flex bg-white'\n              style={{\n                height: 'calc(100% - 70px)'\n              }}\n            >\n              <div className='half-container'>\n                {pathname === 'chemical' && <Chemicals />}\n                {pathname === 'topic' && <Topics />}\n                {pathname === 'location' && <Locations />}\n                {pathname === 'researcher' && <Researchers />}\n                {pathname === 'time' && <Times />}\n                {pathname === 'method' && <Methodologies />}\n              </div>\n              <div className='half-container'>\n                <Projects />\n              </div>\n            </div>\n          </div>\n        </React.Suspense>\n      </AppContext.Provider>\n    );\n  }\n}\n\nHome.contextType = AppContext;\n\nexport default Home;\n","import React, { useContext } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { AppContext } from '../appContext';\n\nconst Project = ({ type, elements, objectKey, history }) => {\n  const context = useContext(AppContext);\n\n  const changeSection = (type, name) => {\n    context.setSelected({ type: type, value: name });\n    history.push(`/${type}?selected=${name}`);\n  };\n\n  return (\n    <div className='d-flex flex-wrap'>\n      {elements ? (\n        elements.map((el, index) => {\n          if (el) {\n            const name = objectKey ? el[objectKey] : el.name;\n            return (\n              <React.Fragment key={index}>\n                <div className='mr-1 link list-el'>\n                  <div onClick={() => changeSection(type, name)}>{name}</div>\n                </div>\n                <span className='mr-1 list-el'>\n                  {index < elements.length - 1 ? '|' : ''}\n                </span>\n              </React.Fragment>\n            );\n          }\n        })\n      ) : (\n        <div>Not found</div>\n      )}\n    </div>\n  );\n};\n\nexport default withRouter(Project);\n","import React from 'react';\nimport List from './List';\n\nconst ProjectPageSideBar = ({ project }) => {\n  return (\n    <div\n      className='w-30 mt-5 d-flex flex-column'\n      style={{ paddingLeft: '80px' }}\n    >\n      <div className='d-flex flex-column my-4'>\n        <div className='list-title'>LOCATIONS</div>\n        <List type={'location'} elements={project.places} objectKey={'city'} />\n      </div>\n      <div className='d-flex flex-column my-4'>\n        <div className='list-title'>CHEMICALS</div>\n        <List type={'chemical'} elements={project.chemicals} />\n      </div>\n      <div className='d-flex flex-column my-4'>\n        <div className='list-title'>METHODS</div>\n        <List type={'method'} elements={project.methods} />\n      </div>\n      <div className='d-flex flex-column my-4'>\n        <div className='list-title'>TOPICS</div>\n        <div className='d-flex flex-wrap'>\n          <List type={'topic'} elements={project.topics} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectPageSideBar;\n","import React from 'react';\n\nconst Video = ({ url }) => {\n  const videoId = url.split('/')[3];\n\n  return (\n    <div className='w-100' style={{ paddingLeft: '80px' }}>\n      <iframe\n        title='project-video'\n        src={`https://player.vimeo.com/video/${videoId}`}\n        width='640'\n        height='360'\n        frameBorder='0'\n        allowFullScreen\n      />\n    </div>\n  );\n};\n\nexport default Video;\n","import React, { useState, useEffect, useContext } from 'react';\nimport sanityClient from '../lib/sanity';\nimport { AppContext } from '../appContext';\nimport Loader from './Loader';\nimport ReactMapboxGl, { Layer, Feature } from 'react-mapbox-gl';\nimport { scaleLinear } from 'd3-scale';\nimport { extent } from 'd3-array';\nimport ReactStreetview from 'react-streetview';\nimport bbox from '@turf/bbox';\nimport { lineString } from '@turf/helpers';\n\nconst query = `*[_type == \"specialProject1\"]{\n  _id, name, coordinates, stringCoordinates, streetviewUrl,\n  \"images\": images[].asset->url,\n}`;\n\nconst radiusScale = scaleLinear().range([0, 30]);\n\nconst SpecialProject = ({}) => {\n  const [projects, setProjects] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [bounds, setBounds] = useState(null);\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  const [zoom, setZoom] = useState(13);\n  const context = useContext(AppContext);\n  // Similar to componentDidMount and componentDidUpdate:\n  useEffect(() => {\n    sanityClient\n      .fetch(query)\n      .then(res => {\n        handleStatusChange(res);\n        return () => {\n          // Clean up\n        };\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  }, [context]);\n\n  const Map = ReactMapboxGl({\n    accessToken:\n      'pk.eyJ1IjoiZ2FicmllbGVjb2xvbWJvIiwiYSI6ImNpdGZqNWY1MjAwZWUyeW1qbDhkZHV2OXMifQ.Nem-UVIW-71T6yQQvjrtog'\n  });\n\n  const handleStatusChange = res => {\n    setProjects(res);\n    console.log(res);\n    const [min, max] = extent(res, d => d.images.length);\n    radiusScale.domain([0, max]);\n    setLoading(false);\n\n    const coordinates = res.map(p => {\n      return [p.coordinates.lng, p.coordinates.lat];\n    });\n    const line = lineString(coordinates);\n    const bounds = bbox(line);\n    console.log(bounds);\n    setBounds(bounds);\n  };\n\n  const getCirclePaint = (project, index) => {\n    return {\n      'circle-radius': radiusScale(project.images.length),\n      'circle-color': index === selectedIndex ? '#000000' : '#FFFFFF',\n      'circle-stroke-color': '#000000',\n      'circle-stroke-width': 2,\n      'circle-opacity': 1\n    };\n  };\n\n  const googleMapsApiKey = 'AIzaSyDQsgQX8xc6_AiLmbwhZrdpELQJC8rlrII';\n\n  if (projects && projects[selectedIndex]) {\n    console.log(\n      projects[selectedIndex].coordinates.lat,\n      projects[selectedIndex].coordinates.lng\n    );\n  }\n\n  let map = null;\n\n  return (\n    <div className='w-100 h-100 d-flex mt-5' style={{ height: '600px' }}>\n      <div\n        className='w-40 bg-white overflow-auto d-flex flex-column align-items-center'\n        style={{ height: '600px' }}\n      >\n        <div className='m-3 w-100'>\n          <div\n            style={{\n              width: '100%',\n              height: '300px',\n              backgroundColor: '#eeeeee'\n            }}\n          >\n            {projects && projects[selectedIndex] && (\n              <ReactStreetview\n                apiKey={googleMapsApiKey}\n                streetViewPanoramaOptions={{\n                  // position: {\n                  //   lat: projects[selectedIndex].coordinates.lat,\n                  //   lng: projects[selectedIndex].coordinates.lng\n                  // },\n                  position: { lat: 46.9171876, lng: 17.8951832 },\n                  pov: { heading: 0, pitch: 100 },\n                  zoom: 1,\n                  motionTracking: false,\n                  motionTrackingControl: false,\n                  linksControl: false,\n                  panControl: false,\n                  zoomControl: false,\n                  addressControl: false,\n                  fullscreenControl: false,\n                  enableCloseButton: false,\n                  disableDefaultUI: true,\n                  showRoadLabels: false,\n                  clickToGo: false,\n                  scrollwheel: false\n                }}\n              />\n            )}\n          </div>\n        </div>\n        <div className='m-3 text-left w-80 project-page-special-title'>\n          {projects && projects[selectedIndex]\n            ? projects[selectedIndex].name\n            : ''}\n        </div>\n        <div className='m-3 text-left w-80'>\n          {projects && projects[selectedIndex]\n            ? projects[selectedIndex].stringCoordinates\n            : ''}\n        </div>\n        <div className='project-page-section-title text-left w-80'>\n          PICTURES TAKEN\n        </div>\n        {projects &&\n          projects[selectedIndex] &&\n          projects[selectedIndex].images.map((image, index) => {\n            return <img key={index} className='my-1 w-80' src={`${image}`} />;\n          })}\n      </div>\n\n      <div className='w-60'>\n        <Map\n          ref={m => (map = m)}\n          style='mapbox://styles/gabrielecolombo/cjsnc1pt701yf1fmoasvam9wv'\n          containerStyle={{\n            height: '600px',\n            width: '100%'\n          }}\n          onZoomEnd={z => {\n            console.log(map);\n            //setZoom(z)\n          }}\n          zoom={[zoom]}\n          fitBounds={\n            bounds\n              ? [[bounds[0], bounds[1]], [bounds[2], bounds[3]]]\n              : [[0, 0], [0, 0]]\n          }\n          center={[\n            projects && projects[selectedIndex]\n              ? projects[selectedIndex].coordinates.lng\n              : -0.2416815,\n            projects && projects[selectedIndex]\n              ? projects[selectedIndex].coordinates.lat\n              : 51.5285582\n          ]}\n        >\n          {projects.map((project, index) => {\n            return (\n              <Layer\n                type='circle'\n                paint={getCirclePaint(project, index)}\n                onClick={() => setSelectedIndex(index)}\n              >\n                <Feature\n                  coordinates={[\n                    project.coordinates.lng,\n                    project.coordinates.lat\n                  ]}\n                />\n              </Layer>\n            );\n          })}\n        </Map>\n      </div>\n    </div>\n  );\n};\n\nexport default SpecialProject;\n","import React, { useState } from 'react';\nimport Slider from 'react-slick';\nimport Loader from './Loader';\n\nconst Carousel = ({ images }) => {\n  const [activeSlide, setActiveSlide] = useState(0);\n\n  const settings = {\n    dots: false,\n    infinite: true,\n    centerMode: true,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    adaptiveHeight: true,\n    variableWidth: true,\n    arrows: false,\n    afterChange: current => setActiveSlide(current)\n  };\n\n  let slider = null;\n\n  return (\n    <div className='w-100 mb-5' style={{ paddingLeft: '80px' }}>\n      <div className='slider'>\n        <Slider ref={c => (slider = c)} {...settings}>\n          {images.map((image, index) => {\n            return (\n              <div className='' key={index}>\n                <img\n                  src={`${image}?h=600`}\n                  key={index}\n                  className='slider-image'\n                />\n              </div>\n            );\n          })}\n        </Slider>\n      </div>\n      <div className={'slider-arrows'}>\n        <img\n          alt='previous image'\n          src='/images/arrow-left.svg'\n          width={20}\n          className='cursor-pointer'\n          onClick={() => slider.slickPrev()}\n        />\n        <div>\n          {activeSlide + 1} / {images.length}\n        </div>\n        <img\n          alt='next image'\n          src='/images/arrow-right.svg'\n          width={20}\n          className='cursor-pointer'\n          onClick={() => slider.slickNext()}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React, { useState, useEffect, useContext } from 'react';\nimport sanityClient, { builder } from '../lib/sanity';\nimport { AppContext } from '../appContext';\nimport BlockContent from '@sanity/block-content-to-react';\nimport { withRouter } from 'react-router-dom';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport Header from './Header';\nimport Loader from './Loader';\nimport ProjectPageSideBar from './ProjectPageSideBar';\nimport Video from './Video';\nimport SpecialProject from './SpecialProject';\nimport Carousel from './Carousel';\n\nconst serializers = {\n  types: {\n    code: props => (\n      <pre data-language={props.node.language}>\n        <code>{props.node.code}</code>\n      </pre>\n    )\n  }\n};\n\nconst urlFor = source => {\n  console.log(builder.image(source));\n  return builder.image(source);\n};\n\nconst ProjectPage = ({ history, location }) => {\n  const [project, setProject] = useState([]);\n  const [modal, toggleModal] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const context = useContext(AppContext);\n\n  const slug = location.pathname.split('/')[2];\n  // Similar to componentDidMount and componentDidUpdate:\n  useEffect(() => {\n    const query = `*[_type == \"project\" && slug.current == \"${slug}\"]{\n      _id, title, body, slug, videoUrl,\n      \"mainImage\": mainImage.asset->url,\n      \"topics\": topics[]->,\n      \"chemicals\": chemicals[]->,\n      \"methods\": methodologies[]->,\n      \"places\": place[]->,\n      \"countries\": place[]->country[]->,\n      \"researchers\": researchers[]->,\n      \"internalResources\": internalResources,\n      \"internalResourcesCategories\": internalResources[].category->,\n      \"internalResourcesFiles\": internalResources[].document.asset->,\n      \"externalResources\": externalResources,\n      \"externalResourcesCategories\": externalResources[].category->,\n      \"images\": images[].asset->url,\n    }`;\n\n    sanityClient\n      .fetch(query)\n      .then(res => {\n        console.log(res);\n        handleStatusChange(res);\n        return () => {\n          // Clean up\n        };\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  }, [slug]);\n\n  const handleStatusChange = res => {\n    setProject(res[0]);\n    setLoading(false);\n  };\n\n  const back = () => {\n    history.goBack();\n  };\n\n  const changeSection = (type, name) => {\n    context.setSelected({ type: type, value: name });\n    history.push(`/${type}?selected=${name}`);\n  };\n\n  return (\n    <div className='w-100 d-flex flex-column position-relative justify-content-center'>\n      <Header expanded={false} />\n      <div className='w-100 d-flex flex-wrap container'>\n        {loading && <Loader fullheader={false} />}\n        <div className='close-icon link' onClick={back}>\n          Back to home\n          <span>\n            <img src='/images/arrow-right.svg' width='20px' />\n          </span>\n        </div>\n        <div className='w-70' style={{ paddingLeft: '80px' }}>\n          <div className='w-100 py-3'>\n            <div className='project-page-title'> {project.title} </div>\n            <div className='d-flex flex-wrap'>\n              {project.researchers &&\n                project.researchers.map((researcher, index) => {\n                  return (\n                    <React.Fragment key={index}>\n                      <div\n                        className={`project-page-researcher link py-1 ${\n                          index === 0 ? 'mr-2' : 'mx-2'\n                        }`}\n                        onClick={() =>\n                          changeSection('researcher', researcher.name)\n                        }\n                      >\n                        {researcher.name}\n                      </div>\n                      <span>\n                        {index < project.researchers.length - 1 ? '|' : ''}\n                      </span>\n                    </React.Fragment>\n                  );\n                })}\n            </div>\n            {project.mainImage && (\n              <div className='mt-4'>\n                <img src={`${project.mainImage}?w=1000&fit=max`} width='100%' />\n              </div>\n            )}\n            <div className='py-4 project-page-body'>\n              {project.body && project.body[0] && (\n                <BlockContent blocks={project.body} serializers={serializers} />\n              )}\n            </div>\n          </div>\n          {((project.internalResources && project.internalResources.length) ||\n            (project.externalResources &&\n              project.externalResources.length)) && (\n            <div className='w-100 mb-5'>\n              <div className='project-page-section-title'> RESOURCES </div>\n              <div className='w-100'>\n                {project.internalResources &&\n                  project.internalResources.map((el, index) => {\n                    if (project.internalResourcesFiles[index]) {\n                      return (\n                        <div key={index} className='project-page-resource'>\n                          {el.private ? (\n                            <div\n                              onClick={() => toggleModal(true)}\n                              className='cursor-pointer'\n                            >\n                              <span className='resource-category'>\n                                {'['}\n                                {\n                                  project.internalResourcesCategories[index]\n                                    .name\n                                }\n                                {']'}\n                              </span>\n                              <BlockContent\n                                blocks={el.name}\n                                serializers={serializers}\n                                className='resource-container'\n                                renderContainerOnSingleChild={true}\n                              />\n                            </div>\n                          ) : (\n                            <a\n                              href={project.internalResourcesFiles[index].url}\n                              download\n                            >\n                              <span className='resource-category'>\n                                {'['}\n                                {\n                                  project.internalResourcesCategories[index]\n                                    .name\n                                }\n                                {']'}\n                              </span>\n                              <BlockContent\n                                blocks={el.name}\n                                serializers={serializers}\n                                className='resource-container'\n                                renderContainerOnSingleChild={true}\n                              />\n                            </a>\n                          )}\n                        </div>\n                      );\n                    }\n                  })}\n                {project.externalResources &&\n                  project.externalResources.map((el, index) => {\n                    if (el.linkUrl) {\n                      return (\n                        <div key={index} className='project-page-resource'>\n                          <span className='resource-category'>\n                            {'['}\n                            {project.externalResourcesCategories[index].name}\n                            {']'}\n                          </span>\n                          <a href={el.linkUrl} target='_blank' download>\n                            <BlockContent\n                              blocks={el.name}\n                              serializers={serializers}\n                              className='resource-container'\n                              renderContainerOnSingleChild={true}\n                            />\n                          </a>\n                        </div>\n                      );\n                    }\n                  })}\n              </div>\n            </div>\n          )}\n        </div>\n        <ProjectPageSideBar project={project} />\n        {project.images && (\n          <div\n            className='project-page-section-title'\n            style={{ paddingLeft: '80px' }}\n          >\n            IMAGES\n          </div>\n        )}\n        {project.images && <Carousel images={project.images} />}\n        {project.videoUrl && <Video url={project.videoUrl} />}\n      </div>\n      <Modal isOpen={modal} toggle={() => toggleModal(!modal)} className={''}>\n        <ModalHeader toggle={() => toggleModal(!modal)}>\n          This document is private\n        </ModalHeader>\n        <ModalBody>\n          If you want to read this document, send us a message at{' '}\n          <a href='mailto:info@info.com'>info@info.com</a>\n        </ModalBody>\n        <ModalFooter>\n          <Button color='secondary' onClick={() => toggleModal(!modal)}>\n            Close\n          </Button>\n        </ModalFooter>\n      </Modal>\n      {project.slug &&\n        project.slug.current === 'mapping-chemicals-in-cagayan-de-oro' && (\n          <SpecialProject />\n        )}\n    </div>\n  );\n};\n\nexport default withRouter(ProjectPage);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Landing from './components/Landing';\nimport Home from './components/Home';\nimport ProjectPage from './components/ProjectPage';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport 'slick-carousel/slick/slick.css';\nimport 'slick-carousel/slick/slick-theme.css';\nimport * as serviceWorker from './serviceWorker';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className='w-100 h-100'>\n          <Switch>\n            <Route exact path='/' component={Landing} />\n            <Route\n              exact\n              path={\n                '/:type(chemical|topic|location|researcher|time|method)?/:selection'\n              }\n              component={Home}\n            />\n            <Route exact path={'/projects/:slug'} component={ProjectPage} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const timeLabels = {\n  0: '3 months',\n  3: '6 months',\n  6: '1 year',\n  12: '2 years',\n  24: '3 years',\n  36: 'more than 3 years'\n};\n\nexport const quantizeTime = time => {\n  if (time < 3) {\n    return 0;\n  } else if (time >= 3 && time < 6) {\n    return 3;\n  } else if (time >= 6 && time < 12) {\n    return 6;\n  } else if (time >= 12 && time < 24) {\n    return 12;\n  } else if (time >= 24 && time < 36) {\n    return 24;\n  } else if (time >= 36) {\n    return 36;\n  }\n};\n","import React from 'react';\n\nexport const AppContext = React.createContext({\n  section: '',\n  setSection: () => {},\n  selectedChemical: '',\n  setSelectedChemical: () => {},\n  selectedLocation: '',\n  setSelectedLocation: () => {},\n  selectedTopic: '',\n  setSelectedTopic: () => {},\n  selected: [],\n  setSelected: () => {},\n  toggleSelected: () => {}\n});\n"],"sourceRoot":""}